swagger: '2.0'
info:
  title: FIO Protocol API
  version: '1.0'
  description: FIO Protocol API
  license:
    name: MIT
  contact:
    url: http://fioprotocol.io
    email: info@fioprotocol.io
    name: FIO
servers:
- url: http://testnet.fioprotocol.io/v1/chain
  description: FIO Testnet server
paths:
  /get_pub_address:
    post:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              public_address:
                type: string
                description: Public address for requested FIO Address and token.
          examples:
            application/json:
              public_address: '0xab5801a7d398351b8be11c439e05c5b3259aec9b'
        '400':
          description: "Possible error messages:\n* \t\"Invalid FIO Address\"\n* \t\"Invalid Chain Code\"\n* \t\"Invalid Token Code\""
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: public_address
                  value: ''
                  error: Invalid public address format
        '404':
          description: |-
            Possible error messages:
            * "Public address not found"
          schema:
            type: object
            properties: {}
            title: Error 404
            description: >-
              HTTP code 404 is returned when the requested information could not
              be found.
          examples:
            application/json:
              message: Public address not found
      summary: Gets public address for FIO Address
      description: Returns a public address for specified token code and FIO Address.
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - fio_address
              - chain_code
              - token_code
            properties:
              fio_address:
                type: string
                title: FIO Address
                minLength: 3
                maxLength: 64
                pattern: >-
                  ^(?:(?=.{3,64}$)[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))@[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))$)
              chain_code:
                type: string
                title: Token/chain code
                minLength: 1
                maxLength: 10
                pattern: '^[A-Z0-9]+$'
              token_code:
                type: string
                title: Token/chain code
                minLength: 1
                maxLength: 10
                pattern: '^[A-Z0-9]+$'
            example:
              fio_address: purse@alice
              chain_code: FIO
              token_code: FIO
      operationId: get_pub_address
      tags:
        - Getters
  /avail_check:
    post:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              is_registered:
                type: integer
                example: 1
                description: |-
                  * 1 - FIO Address or Domain is registered
                  * 0 - FIO Address or Domain is not registered
          examples:
            application/json:
              is_registered: 1
        '400':
          description: |-
            Possible error messages:
            * "Invalid FIO Name"
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: fio_name
                  value: _.@
                  error: Invalid FIO Name
      summary: FIO Address or Domain availability check
      description: Checks if a FIO Address or FIO Domain is available for registration.
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - fio_name
            properties:
              fio_name:
                type: string
                description: FIO Address or FIO Domain to check.
            example:
              fio_name: purse@alice
      operationId: avail_check
      tags:
        - Getters
  /get_fio_names:
    post:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              fio_domains:
                type: array
                items:
                  type: object
                  properties:
                    fio_domain:
                      type: string
                      title: FIO Domain
                      minLength: 1
                      maxLength: 62
                      pattern: '^[a-z0-9-]+$'
                    expiration:
                      type: string
                      format: date-time
                      title: Date/time
                    is_public:
                      type: integer
                      description: |-
                        * 0 - domain is not public
                        * 1 - domain is public
              fio_addresses:
                type: array
                items:
                  type: object
                  properties:
                    fio_address:
                      type: string
                      title: FIO Address
                      minLength: 3
                      maxLength: 64
                      pattern: >-
                        ^(?:(?=.{3,64}$)[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))@[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))$)
                    expiration:
                      type: string
                      format: date-time
                      title: Date/time
          examples:
            application/json:
              fio_domains:
                - fio_domain: alice
                  expiration: '2020-09-11T18:30:56'
                  is_public: 0
              fio_addresses:
                - fio_address: purse@alice
                  expiration: '2020-09-11T18:30:56'
        '400':
          description: |-
            Possible error messages:
            * "Invalid FIO Public Key"
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: fio_public_key
                  value: FIO123
                  error: Invalid FIO Public Key
        '404':
          description: |-
            Possible error messages:
            * "No FIO names"
          schema:
            type: object
            properties: {}
            title: Error 404
            description: >-
              HTTP code 404 is returned when the requested information could not
              be found.
          examples:
            application/json:
              message: No FIO names
      summary: Get FIO Names
      description: Returns FIO Addresses and FIO Domains owned by this public key.
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              fio_public_key:
                type: string
                title: FIO Public Key
                description: Valid WIF Public Key with FIO Prefix
            required:
              - fio_public_key
            example:
              fio_public_key: FIO8PRe4WRZJj5mkem6qVGKyvNFgPsNnjNN6kPhh6EaCpzCVin5Jj
      operationId: get_fio_names
      tags:
        - Getters
  /get_pending_fio_requests:
    post:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              requests:
                type: array
                description: Multiple requests may be returned. All requests are returned.
                items:
                  type: object
                  properties:
                    fio_request_id:
                      type: string
                      description: Id of that funds request.
                    payer_fio_address:
                      type: string
                      description: >-
                        FIO Address of the payer. This address initiated
                        payment.
                    payee_fio_address:
                      type: string
                      description: >-
                        FIO Address of the payee. This address is receiving
                        payment.
                    payer_fio_public_key:
                      type: string
                      description: FIO public key of the payer.
                    payee_fio_public_key:
                      type: string
                      description: FIO public key of the payee.
                    content:
                      type: object
                      title: FIO Request encrypted content
                      description: >-
                        Certain content inside FIO Request is encrypted and
                        packed into this field.


                        Min 64 characters

                        Max 296 characters
                      properties:
                        payee_public_address:
                          type: object
                          properties: {}
                          title: Native Blockchain Public Address
                          description: "This is the public address on another blockchain. Both integrated addresses as well as URI Scheme are supported.\n\n**Integrated Address**\nIf the blockchain supports it, an integrated address may be passed in just like standard public address. The FIO protocol does not perform validation on the passed string.\n\n**URI Scheme**\nFIO Protocol will support formatting of public addresses using URI were certain attributes are appended to the public address following a '?' and delimited with '&'. To allow inter-wallet operability, the following standardized parameters will be supported in official FIO Protocol SDKs.\n\n**Parameters**\n* dt - Ripple\n* memo - Any - use as generic memo field\n* memo_id -\tStellar\n* memo_text -\tStellar\n* memo_hash -\tStellar\n* memo_return -\tStellar\n* payment_id - Monero\n"
                        amount:
                          type: string
                          description: Amount requested.
                        token_code:
                          type: string
                          title: Token/chain code
                          minLength: 1
                          maxLength: 10
                          pattern: '^[A-Z0-9]+$'
                        memo:
                          type: string
                        hash:
                          type: string
                        offline_url:
                          type: string
                        future_use1:
                          type: string
                        future_use2:
                          type: string
                        future_use3:
                          type: string
                        future_use4:
                          type: string
                        future_use5:
                          type: string
                      required:
                        - payee_public_address
                        - amount
                        - token_code
                        - memo
                        - hash
                        - offline_url
                        - future_use1
                        - future_use2
                        - future_use3
                        - future_use4
                        - future_use5
                    time_stamp:
                      type: string
                      description: Timestamp of request
              more:
                type: integer
                description: |-
                  0 - no more results
                  1 - more results
          examples:
            application/json:
              requests:
                - fio_request_id: '10'
                  payer_fio_address: purse@alice
                  payee_fio_address: crypto@bob
                  payer_fio_public_key: FIO7167ErgCveJvuonvrEvVGhdWnkP4AEMfqvEd8s8raMkbbAXqhx
                  payee_fio_public_key: FIO7KGdMYj4ZMY2nUX9EaZu3G3GxZhTNXUq1tsNqC5rcP9rcmvWHq
                  content: ...
                  time_stamp: '2020-09-11T18:30:56'
              more: 0
        '400':
          description: |-
            Possible error messages:
            * "Invalid FIO Public Key"
            * "Invalid limit"
            * "Invalid offset"
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: fio_public_key
                  value: FIO123
                  error: Invalid FIO Public Key
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
        '404':
          description: |-
            Possible error messages:
            * "No pending FIO Requests"
          schema:
            type: object
            properties: {}
            title: Error 404
            description: >-
              HTTP code 404 is returned when the requested information could not
              be found.
          examples:
            application/json:
              message: No pending FIO Requests
      summary: Get pending FIO Requests
      description: Pending requests call polls for any pending requests sent to a receiver.
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              fio_public_key:
                type: string
                title: FIO Public Key
                description: Valid WIF Public Key with FIO Prefix
              limit:
                type: integer
                description: >-
                  Number of requests to return. If omitted, all requests will be
                  returned.
                minimum: 0
              offset:
                type: integer
                description: 'First request from list to return. If omitted, 0 is assumed.'
                minimum: 0
            required:
              - fio_public_key
            example:
              fio_public_key: FIO8PRe4WRZJj5mkem6qVGKyvNFgPsNnjNN6kPhh6EaCpzCVin5Jj
              limit: 100
              offset: 0
      operationId: get_pending_fio_requests
      tags:
        - Getters
  /get_fio_balance:
    post:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              balance:
                type: integer
                description: SUF balance associated with supplied public key.
          examples:
            application/json:
              balance: 100000000000
        '400':
          description: |-
            Possible error messages:
            * "Invalid FIO Public Key"
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: fio_public_key
                  value: FIO123
                  error: Invalid FIO Public Key
        '404':
          description: |-
            Possible error messages:
            * "Public key not found"
          schema:
            type: object
            properties: {}
            title: Error 404
            description: >-
              HTTP code 404 is returned when the requested information could not
              be found.
          examples:
            application/json:
              message: Public key not found
      summary: Get FIO balance
      description: Retrieves balance of FIO tokens.
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              fio_public_key:
                type: string
                title: FIO Public Key
                description: Valid WIF Public Key with FIO Prefix
            required:
              - fio_public_key
            example:
              fio_public_key: FIO8PRe4WRZJj5mkem6qVGKyvNFgPsNnjNN6kPhh6EaCpzCVin5Jj
      operationId: get_fio_balance
      tags:
        - Getters
  /get_fee:
    post:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              fee:
                type: integer
                description: 'Amount of fee in SUFs '
          examples:
            application/json:
              fee: 100000000
        '400':
          description: |-
            Possible error messages:
            * "Invalid end point"
            * "Invalid FIO Address"
            * "No such FIO Address"
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: end_point
                  value: blah
                  error: Invalid end point
      description: Computes and returns fee amount for specific call and specific user.
      summary: Get fee amount
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              end_point:
                type: string
                description: 'Name of API call end point, e.g. add_pub_address'
              fio_address:
                type: string
                title: FIO Address
                minLength: 3
                maxLength: 64
                pattern: >-
                  ^(?:(?=.{3,64}$)[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))@[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))$)
            required:
              - end_point
              - fio_address
            example:
              end_point: add_pub_address
              fio_address: alice@purse
          description: |-
            Valid FIO Address required on the following calls:
            * add_pub_address
            * new_funds_request
            * reject_funds_request
            * record_obt_data
      operationId: get_fee
      tags:
        - Getters
  /get_info:
    post:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              server_version:
                type: string
              chain_id:
                type: string
              head_block_num:
                type: integer
              last_irreversible_block_num:
                type: integer
              last_irreversible_block_id:
                type: string
              head_block_id:
                type: string
              head_block_time:
                type: string
              head_block_producer:
                type: string
              virtual_block_cpu_limit:
                type: integer
              virtual_block_net_limit:
                type: integer
              block_cpu_limit:
                type: integer
              block_net_limit:
                type: integer
              server_version_string:
                type: string
          examples:
            application/json:
              server_version: 8578680f
              chain_id: cf057bbfb72640471fd910bcb67639c22df9f92470936cddc1ade0e2f2e7dc4f
              head_block_num: 1201696
              last_irreversible_block_num: 1201656
              last_irreversible_block_id: 001255f8d3e90e4573265d5ee71a64d6a20dccee5226a0c2e30b4c0a1b082068
              head_block_id: 00125620fac409486e7fea1bebb0b506f8beb679b250a76e95e6f50d02e85d3f
              head_block_time: '2019-09-27T15:28:43.500'
              head_block_producer: 5spujqoyq4ie
              virtual_block_cpu_limit: 200000000
              virtual_block_net_limit: 1048576000
              block_cpu_limit: 199900
              block_net_limit: 1048576
              server_version_string: v1.2.1-2421-g92993a283
      summary: Get FIO blockchain information
      description: Retrieves information about the FIO blockchain.
      operationId: get_info
      tags:
        - Getters
  /get_block:
    post:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              timestamp:
                type: string
              producer:
                type: string
              confirmed:
                type: integer
              previous:
                type: string
              transaction_mroot:
                type: string
              action_mroot:
                type: string
              schedule_version:
                type: integer
              new_producers:
                type: 'null'
              header_extensions:
                type: array
                items:
                  type: object
              producer_signature:
                type: string
              transactions:
                type: array
                items:
                  type: object
              block_extensions:
                type: array
                items:
                  type: object
              id:
                type: string
              block_num:
                type: integer
              ref_block_prefix:
                type: integer
          examples:
            application/json:
              timestamp: '2019-09-27T15:28:23.500'
              producer: 5spujqoyq4ie
              confirmed: 0
              previous: 001255f72bd0a154355dddec8391de0f20a3619ee6802535e6bd8f4ea2caf0df
              transaction_mroot: '0000000000000000000000000000000000000000000000000000000000000000'
              action_mroot: d8552b686d6b520d39bf27c3bb49968b5ca52e370467962e42edc151437d01c6
              schedule_version: 2
              new_producers: null
              header_extensions: []
              producer_signature: >-
                SIG_K1_K5WD9qbSfJwMz1doYBn5znfFsPh9UiV2p9XAbkDDV2nvpQXq2D23EU6vuGSndSZ7FATqkNn5dqZFtaBricHRJvtgGFZ9pG
              transactions: []
              block_extensions: []
              id: 001255f8d3e90e4573265d5ee71a64d6a20dccee5226a0c2e30b4c0a1b082068
              block_num: 1201656
              ref_block_prefix: 1583162995
      summary: Get block information
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              block_num_or_id:
                type: string
                description: >-
                  last_irreversible_block_num or last_irreversible_block_id from
                  /get_info
            required:
              - block_num_or_id
            example:
              block_num_or_id: '39570'
      description: Retrieves information about the specific block.
      operationId: get_block
      tags:
        - Getters
  /get_raw_abi:
    post:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              account_name:
                type: string
              code_hash:
                type: string
              abi_hash:
                type: string
              abi:
                type: string
          examples:
            application/json:
              account_name: fio.system
              code_hash: 0e5e404480e07b5b1c9d0d8cfbe4f04b8f3fd3477a42251bab8191e6e6c241a8
              abi_hash: d98bbfa97018efcdfbbf42b62406707bc17498e630f58e4529029af71042d861
              abi: >-
                DmVvc2lvOjphYmkvMS4wABMHZmlvbmFtZQAIBG5hbWUGc3RyaW5nCG5hbWVoYXNoBnVpbnQ2NAZkb21haW4Gc3RyaW5nCmRvbWFpbmhhc2gGdWludDY0CmV4cGlyYXRpb24GdWludDY0DW93bmVyX2FjY291bnQEbmFtZQlhZGRyZXNzZXMIc3RyaW5nW10XYnVuZGxlZWxpZ2libGVjb3VudGRvd24GdWludDY0BmRvbWFpbgAFBG5hbWUGc3RyaW5nCmRvbWFpbmhhc2gGdWludDY0CWlzX3B1YmxpYwV1aW50OApleHBpcmF0aW9uBnVpbnQzMgdhY2NvdW50BnVpbnQ2NAljaGFpbkxpc3QAAwRuYW1lBnN0cmluZwJpZAZ1aW50NjQJY2hhaW5oYXNoBnVpbnQzMgplb3Npb19uYW1lAAMHYWNjb3VudARuYW1lCWNsaWVudGtleQZzdHJpbmcHa2V5aGFzaAZ1aW50NjQJY2hhaW5wYWlyAAMFaW5kZXgGdWludDY0CWNoYWlubmFtZQZzdHJpbmcJY2hhaW5oYXNoBnVpbnQ2NApyZWdhZGRyZXNzAAULZmlvX2FkZHJlc3MGc3RyaW5nFG93bmVyX2Zpb19wdWJsaWNfa2V5BnN0cmluZwdtYXhfZmVlBnVpbnQ2NAVhY3RvcgRuYW1lBHRwaWQGc3RyaW5nCmFkZGFkZHJlc3MABgtmaW9fYWRkcmVzcwZzdHJpbmcKdG9rZW5fY29kZQZzdHJpbmcOcHVibGljX2FkZHJlc3MGc3RyaW5nB21heF9mZWUGdWludDY0BWFjdG9yBG5hbWUEdHBpZAZzdHJpbmcJcmVnZG9tYWluAAUKZmlvX2RvbWFpbgZzdHJpbmcUb3duZXJfZmlvX3B1YmxpY19rZXkGc3RyaW5nB21heF9mZWUGdWludDY0BWFjdG9yBG5hbWUEdHBpZAZzdHJpbmcLcmVuZXdkb21haW4ABApmaW9fZG9tYWluBnN0cmluZwdtYXhfZmVlBnVpbnQ2NAR0cGlkBnN0cmluZwVhY3RvcgRuYW1lDHJlbmV3YWRkcmVzcwAEC2Zpb19hZGRyZXNzBnN0cmluZwdtYXhfZmVlBnVpbnQ2NAR0cGlkBnN0cmluZwVhY3RvcgRuYW1lCWV4cGRvbWFpbgACBWFjdG9yBG5hbWUGZG9tYWluBnN0cmluZwxleHBhZGRyZXNzZXMABAVhY3RvcgRuYW1lBmRvbWFpbgZzdHJpbmcOYWRkcmVzc19wcmVmaXgGc3RyaW5nF251bWJlcl9hZGRyZXNzZXNfdG9fYWRkBnVpbnQ2NAxzZXRkb21haW5wdWIABQpmaW9fZG9tYWluBnN0cmluZwlpc19wdWJsaWMFdWludDgHbWF4X2ZlZQZ1aW50NjQFYWN0b3IEbmFtZQR0cGlkBnN0cmluZwtidXJuZXhwaXJlZAAACnJlbW92ZW5hbWUAAAxyZW1vdmVkb21haW4AAApybXZhZGRyZXNzAAALZGVjcmNvdW50ZXIAAQtmaW9fYWRkcmVzcwZzdHJpbmcKYmluZDJlb3NpbwADB2FjY291bnQEbmFtZQpjbGllbnRfa2V5BnN0cmluZwhleGlzdGluZwRib29sDQAAxuqmZJi6CnJlZ2FkZHJlc3MAAADG6qZkUjIKYWRkYWRkcmVzcwAAAJjOSJqYuglyZWdkb21haW4AAKYzkiauproLcmVuZXdkb21haW4AgLG6KRmuproMcmVuZXdhZGRyZXNzAAAAmM5ImmpXCWV4cGRvbWFpbgCAFcbqpmRqVwxleHBhZGRyZXNzZXMAAJK6rnY1rz4LYnVybmV4cGlyZWQAAICSZqpNpboKcmVtb3ZlbmFtZQAwnZE0qU2lugxyZW1vdmVkb21haW4AAADG6qZktrwKcm12YWRkcmVzcwBwdJ3OSJqywgxzZXRkb21haW5wdWIAAAB1mCqRpjsKYmluZDJlb3NpbwAEAAAAWEkzqVsDaTY0AQRuYW1lAQZzdHJpbmcHZmlvbmFtZQAAAABPZyRNA2k2NAEEbmFtZQEGc3RyaW5nBmRvbWFpbgAAAADg6UxDA2k2NAEEbmFtZQEGc3RyaW5nCWNoYWluTGlzdABANTJPTREyA2k2NAEHYWNjb3VudAEGdWludDY0CmVvc2lvX25hbWUAAAAA=
      description: The ABI is required to properly pack content of signed calls.
      summary: Get ABI for specific account name
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              account_name:
                type: string
                description: Account name. Check request definition for specific call.
            required:
              - account_name
            example:
              account_name: fio.system
      operationId: get_raw_abi
      tags:
        - Getters
  /get_producers:
    post:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              producers:
                type: array
                items:
                  type: object
                  properties:
                    owner:
                      type: string
                    fio_address:
                      type: string
                    total_votes:
                      type: string
                    producer_fio_public_key:
                      type: string
                    is_active:
                      type: integer
                    url:
                      type: string
                    unpaid_blocks:
                      type: integer
                    last_claim_time:
                      type: string
                    location:
                      type: integer
              total_producer_vote_weight:
                type: string
              more:
                type: string
          examples:
            application/json:
              producers:
                - owner: fioproducerd
                  fio_address: ''
                  total_votes: '4999000000000.00000000000000000'
                  producer_fio_public_key: FIO79vbwYtjhBVnBRYDjhCyxRFVr6JsFfVrLVhUKoqFTnceZtPvAU
                  is_active: 1
                  url: ''
                  unpaid_blocks: 302361
                  last_claim_time: '2019-09-20T16:35:26.000'
                  location: 0
                - owner: fioproducerc
                  fio_address: ''
                  total_votes: '3999000000000.00000000000000000'
                  producer_fio_public_key: FIO79vbwYtjhBVnBRYDjhCyxRFVr6JsFfVrLVhUKoqFTnceZtPvAU
                  is_active: 1
                  url: ''
                  unpaid_blocks: 302349
                  last_claim_time: '2019-09-20T16:35:25.500'
                  location: 0
                - owner: fioproducerb
                  fio_address: ''
                  total_votes: '2999000000000.00000000000000000'
                  producer_fio_public_key: FIO79vbwYtjhBVnBRYDjhCyxRFVr6JsFfVrLVhUKoqFTnceZtPvAU
                  is_active: 1
                  url: ''
                  unpaid_blocks: 302352
                  last_claim_time: '2019-09-20T16:35:25.500'
                  location: 0
                - owner: 5spujqoyq4ie
                  fio_address: ''
                  total_votes: '1999000000000.00000000000000000'
                  producer_fio_public_key: FIO77odcm3LYr6YduUxf83a4jp4pQ4YvKAjBkHJnLxq2SsgNSc13u
                  is_active: 1
                  url: ''
                  unpaid_blocks: 302364
                  last_claim_time: '2019-09-20T16:35:25.500'
                  location: 0
                - owner: 2ugokdhavqow
                  fio_address: pawel366688@woohoo56311
                  total_votes: '0.00000000000000000'
                  producer_fio_public_key: FIO1111111111111111111111111111111114T1Anm
                  is_active: 0
                  url: h
                  unpaid_blocks: 0
                  last_claim_time: '2019-09-26T22:40:30.000'
                  location: 80
                - owner: gev2yeim1cjy
                  fio_address: pawel554427@woohoo56311
                  total_votes: '998769980000000.00000000000000000'
                  producer_fio_public_key: FIO1111111111111111111111111111111114T1Anm
                  is_active: 0
                  url: ''
                  unpaid_blocks: 0
                  last_claim_time: '2019-09-26T22:40:22.000'
                  location: 80
              total_producer_vote_weight: '1012765980000000.00000000000000000'
              more: ''
        '400':
          description: |-
            Possible error messages:
            * "Invalid limit"
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: limit
                  value: '-100'
                  error: Invalid limit
      summary: Get a list of current block producers
      description: This call returns all block producers and their scaled votes.
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              limit:
                type: string
                description: Total number of producers to retrieve
              lower_bound:
                type: string
              json:
                type: boolean
                description: Return result in JSON format?
            example:
              limit: '10'
              lower_bound: ...........1f
              json: true
      operationId: get_producers
      tags:
        - Getters
  /get_sent_fio_requests:
    post:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              requests:
                type: array
                description: Multiple requests may be returned. All requests are returned.
                items:
                  type: object
                  properties:
                    fio_request_id:
                      type: string
                      description: Id of that funds request.
                    payer_fio_address:
                      type: string
                      description: >-
                        FIO Address of the payer. This address initiated
                        payment.
                    payee_fio_address:
                      type: string
                      description: >-
                        FIO Address of the payee. This address is receiving
                        payment.
                    payer_fio_public_key:
                      type: string
                      description: FIO public key of the payer.
                    payee_fio_public_key:
                      type: string
                      description: FIO public key of the payee.
                    content:
                      type: object
                      title: FIO Request encrypted content
                      description: >-
                        Certain content inside FIO Request is encrypted and
                        packed into this field.


                        Min 64 characters

                        Max 296 characters
                      properties:
                        payee_public_address:
                          type: object
                          title: Native Blockchain Public Address
                          description: "This is the public address on another blockchain. Both integrated addresses as well as URI Scheme are supported.\n\n**Integrated Address**\nIf the blockchain supports it, an integrated address may be passed in just like standard public address. The FIO protocol does not perform validation on the passed string.\n\n**URI Scheme**\nFIO Protocol will support formatting of public addresses using URI were certain attributes are appended to the public address following a '?' and delimited with '&'. To allow inter-wallet operability, the following standardized parameters will be supported in official FIO Protocol SDKs.\n\n**Parameters**\n* dt - Ripple\n* memo - Any - use as generic memo field\n* memo_id -\tStellar\n* memo_text -\tStellar\n* memo_hash -\tStellar\n* memo_return -\tStellar\n* payment_id - Monero\n"
                        amount:
                          type: string
                          description: Amount requested.
                        token_code:
                          type: string
                          title: Token/chain code
                          minLength: 1
                          maxLength: 10
                          pattern: '^[A-Z0-9]+$'
                        memo:
                          type: string
                        hash:
                          type: string
                        offline_url:
                          type: string
                        future_use1:
                          type: string
                        future_use2:
                          type: string
                        future_use3:
                          type: string
                        future_use4:
                          type: string
                        future_use5:
                          type: string
                      required:
                        - payee_public_address
                        - amount
                        - token_code
                        - memo
                        - hash
                        - offline_url
                        - future_use1
                        - future_use2
                        - future_use3
                        - future_use4
                        - future_use5
                    time_stamp:
                      type: string
                      description: Timestamp of request
                    status:
                      type: string
                      title: FIO Request status
                      description: Status of FIO Request
                      enum:
                        - requested
                        - sent_to_blockchain
                        - rejected
              more:
                type: integer
                description: |-
                  0 - no more results
                  1 - more results
          examples:
            application/json:
              requests:
                - fio_request_id: >-
                    309753b6b0aca9ba107c06332c4294ec2d8a270133a17239f07bc62b704ccb87
                  payer_fio_address: purse@alice
                  payee_fio_address: crypto@bob
                  payer_fio_public_key: FIO7167ErgCveJvuonvrEvVGhdWnkP4AEMfqvEd8s8raMkbbAXqhx
                  payee_fio_public_key: FIO7KGdMYj4ZMY2nUX9EaZu3G3GxZhTNXUq1tsNqC5rcP9rcmvWHq
                  content: ...
                  time_stamp: '2020-09-11T18:30:56'
                  status: rejected
              more: 0
        '400':
          description: |-
            Possible error messages:
            * "Invalid FIO Public Key"
            * "Invalid limit"
            * "Invalid offset"
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: fio_public_key
                  value: FIO123
                  error: Invalid FIO Public Key
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
        '404':
          description: |-
            Possible error messages:
            * "No FIO Requests"
          schema:
            type: object
            properties: {}
            title: Error 404
            description: >-
              HTTP code 404 is returned when the requested information could not
              be found.
          examples:
            application/json:
              message: No FIO Requests
      summary: Get FIO Requests sent out
      description: >-
        Sent requests call polls for any requests sent by provided FIO public
        key.
      operationId: get_sent_fio_requests
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              fio_public_key:
                type: string
                title: FIO Public Key
                description: Valid WIF Public Key with FIO Prefix
              limit:
                type: integer
                description: >-
                  Number of requests to return. If omitted, all requests will be
                  returned.
                minimum: 0
              offset:
                type: integer
                description: 'First request from list to return. If omitted, 0 is assumed.'
                minimum: 0
            required:
              - fio_public_key
            example:
              fio_public_key: FIO8PRe4WRZJj5mkem6qVGKyvNFgPsNnjNN6kPhh6EaCpzCVin5Jj
              limit: 100
              offset: 0
      tags:
        - Getters
  /get_obt_data:
    post:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              obt_data_records:
                type: array
                description: Multiple OBT Data Records may be returned.
                items:
                  type: object
                  properties:
                    payer_fio_address:
                      type: string
                      description: >-
                        FIO Address of the payer. This address initiated
                        payment.
                    payee_fio_address:
                      type: string
                      description: >-
                        FIO Address of the payee. This address is receiving
                        payment.
                    payer_fio_public_key:
                      type: string
                      description: FIO public key of the payer.
                    payee_fio_public_key:
                      type: string
                      description: FIO public key of the payee.
                    content:
                      type: object
                      title: FIO Data encrypted content
                      description: >-
                        Certain content inside FIO Data is encrypted and packed
                        into this field.


                        Min 64 characters

                        Max 432 characters
                      properties:
                        payer_public_address:
                          type: string
                          description: >-
                            Public address on other blockchain of user sending
                            funds.
                        payee_public_address:
                          type: string
                          description: >-
                            Public address on other blockchain of user receiving
                            funds.
                        amount:
                          type: string
                          description: Amount sent.
                        token_code:
                          type: string
                          title: Token/chain code
                          minLength: 1
                          maxLength: 10
                          pattern: '^[A-Z0-9]+$'
                        status:
                          type: string
                          description: |-
                            Status of this OBT. Allowed statuses are:
                            * sent_to_blockchain
                        obt_id:
                          type: string
                          description: >-
                            Other Blockchain Transaction ID (OBT ID), i.e
                            Bitcoin transaction ID
                        memo:
                          type: string
                          description: memo field
                        hash:
                          type: string
                        offline_url:
                          type: string
                      required:
                        - payer_public_address
                        - payee_public_address
                        - amount
                        - token_code
                        - status
                        - obt_id
                        - memo
                        - hash
                        - offline_url
                    fio_request_id:
                      type: integer
                      description: 'Id of FIO Request, if in response to FIO Request.'
                    status:
                      type: string
                      description: In current version alwasy sent_to_blockchain
                    time_stamp:
                      type: string
                      description: Timestamp of transaction
              more:
                type: integer
                description: |-
                  0 - no more results
                  1 - more results
          examples:
            application/json:
              obt_data_records:
                - payer_fio_address: purse@alice
                  payee_fio_address: crypto@bob
                  payer_fio_public_key: FIO7167ErgCveJvuonvrEvVGhdWnkP4AEMfqvEd8s8raMkbbAXqhx
                  payee_fio_public_key: FIO7KGdMYj4ZMY2nUX9EaZu3G3GxZhTNXUq1tsNqC5rcP9rcmvWHq
                  content: ...
                  fio_request_id: 10
                  status: sent_to_blockchain
                  time_stamp: '2020-09-11T18:30:56'
              more: 0
        '400':
          description: |-
            Possible error messages:
            * "Invalid FIO Public Key"
            * "Invalid limit"
            * "Invalid offset"
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: fio_public_key
                  value: FIO123
                  error: Invalid FIO Public Key
        '404':
          description: ''
          schema:
            type: object
            properties: {}
            title: Error 404
            description: >-
              HTTP code 404 is returned when the requested information could not
              be found.
          examples:
            application/json:
              message: No OBT data records
      summary: Get OBT data
      description: >-
        Retrives Other Blockchain Transaction (OBT) metadata data stored using
        /record_obt_data. This call will return all metadata relevant to the
        provided FIO Public key, including:

        * Outbound data. Payer's FIO Address is owned by provided FIO Public key

        * Inbound data. Payee's FIO Address is owned by provided FIO Public key
      operationId: get_obt_data
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              fio_public_key:
                type: string
                title: FIO Public Key
                description: Valid WIF Public Key with FIO Prefix
              limit:
                type: integer
                description: >-
                  Number of requests to return. If omitted, all requests will be
                  returned.
                minimum: 0
              offset:
                type: integer
                description: 'First request from list to return. If omitted, 0 is assumed.'
                minimum: 0
            required:
              - fio_public_key
            example:
              fio_public_key: FIO8PRe4WRZJj5mkem6qVGKyvNFgPsNnjNN6kPhh6EaCpzCVin5Jj
              limit: 100
              offset: 0
      tags:
        - Getters
  /get_actor:
    post:
      responses:
        '200':
          description: ''
          schema:
            type: object
            required:
              - actor
            properties:
              actor:
                type: string
          examples:
            application/json:
              actor: gev2yeim1cjy
      summary: Get actor from public key
      description: >-
        Convenience method, which returns [actor](/api/actor) for supplied FIO
        Public Key. The FIO Chain is not checked for existence of this actor, it
        simply converts the key to actor using [hash function](/api/actor).
      operationId: get_actor
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - fio_public_key
            properties:
              fio_public_key:
                type: string
                title: FIO Public Key
                description: Valid WIF Public Key with FIO Prefix
            example:
              fio_public_key: FIO8PRe4WRZJj5mkem6qVGKyvNFgPsNnjNN6kPhh6EaCpzCVin5Jj
      tags:
        - Getters
  /get_table_rows:
    post:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              rows:
                type: array
                description: Rows from table. Format depands on table queried.
                items: {}
              more:
                type: boolean
                description: Indicates if more results are available.
          examples:
            application/json:
              rows:
                - id: 10070
                  name: referral@fio
                  namehash: '0xc3bf40257f090f2887271c515ebac1dc'
                  domain: fio
                  domainhash: '0x8d9d3bd8a6fb22345ce8fa3c416a28e5'
                  expiration: 1624985778
                  owner_account: 534jl4ye5oai
                  addresses:
                    - token_code: FIO
                      chain_code: FIO
                      public_address: FIO6dZx1TeggbrDemzVNdvuVJdgZ4RXAtGMBm5xcHJZVYgPFRQmpk
                  bundleeligiblecountdown: 100
              more: true
      summary: Get state table content
      description: "This call can be used to return any data from the state table.\n\n## Returning all public addresses example\nHere's an advance example of a query returning all public addresses mapped to a single FIO Address.\n\nThe data is contained in *fionames* table in *fio.address* contract and *fio.address* scope.\n\nThe FIO Address is index position *5* of index_type *i128*.\n\n### Compute index\nThe hash is a truncated sha1 hash, in big-endian order, as a hex-string.\n1. Calculate the sha1 sum of the address\n2. Take the first 16 bytes\n3. Reverse the byte order\n4. Convert to a hexadecimal string, and prepend \"0x\"\n\nExample for \"test@fiotestnet\"\n1. sha1 hash: 58df646ca7a4c9be1e1436b9ae1608eb62e653a0\n2. First 16 bytes: 58df646ca7a4c9be1e1436b9ae1608eb\n3. Reverse byte order (big endian): eb0816aeb936141ebec9a4a76c64df58\n4. Prepend 0x\n\n```\nfunction nameHash(name) {\n    const hash = require('crypto').createHash('sha1')\n    return '0x' + hash.update(name).digest().slice(0,16).reverse().toString(\"hex\")\n}\n\nconsole.log( nameHash('test@fiotestnet') )\n// outputs: 0xeb0816aeb936141ebec9a4a76c64df58\n```\n\n### Query table\nTo query the table, specify index 5, with a type of i128, using the hash as the upper and lower bounds:\n```\n{\n\t\"code\": \"fio.address\",\n\t\"scope\": \"fio.address\",\n\t\"table\": \"fionames\",\n\t\"lower_bound\": \"0xeb0816aeb936141ebec9a4a76c64df58\",\n\t\"upper_bound\": \"0xeb0816aeb936141ebec9a4a76c64df58\",\n\t\"key_type\": \"i128\",\n\t\"index_position\": \"5\",\n\t\"json\": true\n}\n```"
      operationId: get_table_rows
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              code:
                type: string
                description: >-
                  The name of the smart contract that controls the provided
                  table.
              scope:
                type: string
                description: The account to which this data belongs.
              table:
                type: string
                description: The name of the table as specified by the contract abi.
              lower_bound:
                type: string
                description: >-
                  Filters results to return the first element that is not less
                  than provided value in set.
              upper_bound:
                type: string
                description: >-
                  Filters results to return the first element that is greater
                  than provided value in set.
              key_type:
                type: string
                description: >-
                  Type of key specified by index_position (for example -
                  uint64_t or name).
              index_position:
                type: string
                description: Position of the index used.
              limit:
                type: integer
                description: >-
                  Number of rows to return. If omitted, all requests will be
                  returned.
              json:
                type: boolean
                description: Get the response as json.
              reverse:
                type: boolean
                description: Return data in reverse order.
            required:
              - code
              - scope
              - table
            example:
              code: fio.address
              scope: fio.address
              table: fionames
              lower_bound: '0xeb0816aeb936141ebec9a4a76c64df58'
              upper_bound: '0xeb0816aeb936141ebec9a4a76c64df58'
              key_type: i128
              index_position: '5'
              json: true
      tags:
        - Getters
  /get_account:
    post:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              account_name:
                type: string
              head_block_num:
                type: integer
              head_block_time:
                type: string
              privileged:
                type: boolean
              last_code_update:
                type: string
              created:
                type: string
              ram_quota:
                type: integer
              net_weight:
                type: integer
              cpu_weight:
                type: integer
              net_limit:
                type: object
                properties:
                  used:
                    type: integer
                  available:
                    type: integer
                  max:
                    type: integer
              cpu_limit:
                type: object
                properties:
                  used:
                    type: integer
                  available:
                    type: integer
                  max:
                    type: integer
              ram_usage:
                type: integer
              permissions:
                type: array
                items:
                  type: object
                  properties:
                    perm_name:
                      type: string
                    parent:
                      type: string
                    required_auth:
                      type: object
                      properties:
                        threshold:
                          type: integer
                        keys:
                          type: array
                          items:
                            type: object
                            properties:
                              key:
                                type: string
                              weight:
                                type: integer
                        accounts:
                          type: array
                          items:
                            type: object
                        waits:
                          type: array
                          items:
                            type: object
              total_resources:
                type: object
                properties:
                  owner:
                    type: string
                  net_weight:
                    type: string
                  cpu_weight:
                    type: string
                  ram_bytes:
                    type: integer
              self_delegated_bandwidth:
                type: 'null'
              refund_request:
                type: 'null'
              voter_info:
                type: 'null'
          examples:
            application/json:
              account_name: qkx1keadtwau
              head_block_num: 30682251
              head_block_time: '2020-09-18T14:45:02.500'
              privileged: false
              last_code_update: '1970-01-01T00:00:00.000'
              created: '2020-08-31T14:41:54.000'
              ram_quota: 26112
              net_weight: -1
              cpu_weight: -1
              net_limit:
                used: -1
                available: -1
                max: -1
              cpu_limit:
                used: -1
                available: -1
                max: -1
              ram_usage: 2996
              permissions:
                - perm_name: active
                  parent: owner
                  required_auth:
                    threshold: 1
                    keys:
                      - key: FIO5nejysoKY5U9fxGicT6oR2ztW6CPazJRZBoPR1Dh3oJUGssqJE
                        weight: 1
                    accounts: []
                    waits: []
                - perm_name: owner
                  parent: ''
                  required_auth:
                    threshold: 1
                    keys:
                      - key: FIO5nejysoKY5U9fxGicT6oR2ztW6CPazJRZBoPR1Dh3oJUGssqJE
                        weight: 1
                    accounts: []
                    waits: []
              total_resources:
                owner: qkx1keadtwau
                net_weight: 0.000000000 FIO
                cpu_weight: 0.000000000 FIO
                ram_bytes: 0
              self_delegated_bandwidth: null
              refund_request: null
              voter_info: null
      summary: Get account information
      description: >-
        Returns information about the
        [account](https://developers.fioprotocol.io/fio-protocol/accounts), such
        as creation date and permissions.


        If you are trying to use this method to get FIO Public Key from an
        account, please note that users have the options of swapping their key,
        for example to create a multisig, see tw4tjkmo4eyd
      operationId: get_account
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              account_name:
                type: string
            required:
              - account_name
            example:
              account_name: 5jfctnozulcb
      tags:
        - Getters
  regaddress:
    options:
      responses:
        '200':
          description: >-
            This section defines only the contents of the response returned in
            `processed->action_traces->receipt->response` string. See [push_transaction](#post-/push_transaction)
            section for the definition of the actual response.
          schema:
            type: object
            properties:
              status:
                type: string
                description: OK
              expiration:
                type: string
                format: date-time
                title: Date/time
              fee_collected:
                title: Fee collected
                description: Amount of SUFs collected as fee
                type: integer
          examples:
            application/json:
              status: OK
              expiration: '2020-09-11T18:30:56'
              fee_collected: 30000000000
            new:
              status: OK
              expiration: '2020-09-11T18:30:56'
              fee_collected: 30000000000
        '400':
          description: |-
            Possible error messages:
            * "Invalid FIO address"
            * "FIO address already registered"
            * "FIO Domain not registered"
            * "FIO Domain expired"
            * "FIO Domain is not public. Only owner can create FIO Addresses."
            * "Invalid FIO Public Key"
            * "Invalid fee value"
            * "Insufficient funds to cover fee"
            * "Fee exceeds supplied maximum"
            * "TPID must be empty or valid FIO address"
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: fio_address
                  value: purse@alice
                  error: FIO address already registered
        '403':
          description: |-
            Possible triggers:
            * Signer's FIO Public Key does not match actor
          schema:
            type: object
            properties: {}
            description: >-
              HTTP code 403 is returned when the request signature is not valid
              or this user is not allowed to sign this transaction.
            title: Error 403
          examples:
            application/json:
              type: invalid_signature
              message: Request signature not valid or not allowed.
      summary: 'Register FIO Address'
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              fio_address:
                type: string
                title: FIO Address
                minLength: 3
                maxLength: 64
                pattern: >-
                  ^(?:(?=.{3,64}$)[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))@[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))$)
                description: >-
                  See [FIO Address
                  format](https://kb.fioprotocol.io/fio-protocol/fio-addresses/format)


                  Please note that FIO Address is case insensitive. If upper
                  case characters are passed in, they will be converted to lower
                  case.
              owner_fio_public_key:
                type: string
                title: FIO Public Key
                description: Valid WIF Public Key with FIO Prefix
              max_fee:
                type: integer
                title: Max fee
                description: >-
                  Maximum amount of SUFs the user is willing to pay for fee.
                  Should be preceded by /get_fee for correct value.
              tpid:
                type: string
                title: TPID
                description: |-
                  * FIO Address of the wallet which generates this transaction.
                  * This FIO Address will be paid 10% of the fee.
                  * See FIO Protocol#TPIDs for details.
                  * Set to empty if not known.
              actor:
                type: string
                title: Actor
                description: 'See [Generating actor](/actor)'
            required:
              - fio_address
              - owner_fio_public_key
              - max_fee
              - tpid
              - actor
            example:
              fio_address: purse@alice
              owner_fio_public_key: FIO8PRe4WRZJj5mkem6qVGKyvNFgPsNnjNN6kPhh6EaCpzCVin5Jj
              max_fee: 30000000000
              tpid: rewards@wallet
              actor: aftyershcu22
          description: >-
            This section defines the `data` object which needs to be created before
            it's packed and signed.
      description: >-
        This section defines the object which needs to be created before it's
        packed and signed for [push_transaction](#post-/push_transaction) and the response object returned in
        `processed->action_traces->receipt->response` string.

        ### `actions` parameters

        * account: `fio.address`

        * name: `regaddress`
      operationId: register_fio_address_model
      tags:
        - Actions
  regdomain:
    options:
      responses:
        '200':
          description: >-
            This section defines only the contents of the response returned in
            `processed->action_traces->receipt->response` string. See [push_transaction](#post-/push_transaction)
            section for the definition of the actual response.
          schema:
            type: object
            properties:
              status:
                type: string
                description: OK
              expiration:
                type: string
                format: date-time
                title: Date/time
              fee_collected:
                title: Fee collected
                description: Amount of SUFs collected as fee
                type: integer
          examples:
            application/json:
              status: OK
              expiration: '2020-09-11T18:30:56'
              fee_collected: 2000000000
        '400':
          description: |-
            Possible error messages:
            * "Invalid FIO domain"
            * "FIO domain already registered"
            * "Invalid FIO Public Key"
            * "Invalid fee value"
            * "Insufficient funds to cover fee"
            * "Fee exceeds supplied maximum"
            * "TPID must be empty or valid FIO address"
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: max_fee
                  value: '200'
                  error: Fee exceeds supplied maximum.
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
        '403':
          description: |-
            Possible triggers:
            * Signer's FIO Public Key does not match actor
          examples:
            application/json:
              type: invalid_signature
              message: Request signature not valid or not allowed.
          schema:
            type: object
            properties: {}
            description: >-
              HTTP code 403 is returned when the request signature is not valid
              or this user is not allowed to sign this transaction.
            title: Error 403
      summary: 'Register FIO Domain'
      description: >-
        This section defines the object which needs to be created before it's
        packed and signed for [push_transaction](#post-/push_transaction) and the response object returned in
        `processed->action_traces->receipt->response` string.

        ### `actions` parameters

        * account: `fio.address`

        * name: `regdomain`
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              fio_domain:
                type: string
                title: FIO Domain
                minLength: 1
                maxLength: 62
                pattern: '^[a-z0-9-]+$'
                description: >-
                  See [FIO Domain
                  format](https://kb.fioprotocol.io/fio-protocol/fio-addresses/format)


                  Please note that FIO Domain is case insensitive. If upper case
                  characters are passed in, they will be converted to lower
                  case.
              owner_fio_public_key:
                type: string
                title: FIO Public Key
                description: Valid WIF Public Key with FIO Prefix
              max_fee:
                type: integer
                title: Max fee
                description: >-
                  Maximum amount of SUFs the user is willing to pay for fee.
                  Should be preceded by /get_fee for correct value.
              tpid:
                type: string
                title: TPID
                description: |-
                  * FIO Address of the wallet which generates this transaction.
                  * This FIO Address will be paid 10% of the fee.
                  * See FIO Protocol#TPIDs for details.
                  * Set to empty if not known.
              actor:
                type: string
                title: Actor
                description: 'See [Generating actor](/actor)'
            required:
              - fio_domain
              - owner_fio_public_key
              - max_fee
              - tpid
              - actor
            example:
              fio_domain: alice
              owner_fio_public_key: FIO8PRe4WRZJj5mkem6qVGKyvNFgPsNnjNN6kPhh6EaCpzCVin5Jj
              max_fee: 2000000000
              tpid: rewards@wallet
              actor: aftyershcu22
          description: >-
            This section defines the `data` object which needs to be created before
            it's packed and signed.
      operationId: register_fio_domain_model
      tags:
        - Actions
  renewdomain:
    options:
      responses:
        '200':
          description: >-
            This section defines only the contents of the response returned in
            `processed->action_traces->receipt->response` string. See [push_transaction](#post-/push_transaction)
            section for the definition of the actual response.
          schema:
            type: object
            properties:
              status:
                type: string
                description: OK
              expiration:
                type: string
                format: date-time
                title: Date/time
              fee_collected:
                title: Fee collected
                description: Amount of SUFs collected as fee
                type: integer
          examples:
            application/json:
              status: OK
              expiration: '2020-09-11T18:30:56'
              fee_collected: 30000000000
        '400':
          description: |-
            Possible error messages:
            * "Invalid FIO domain"
            * "Invalid fee value"
            * "Insufficient funds to cover fee"
            * "Fee exceeds supplied maximum"
            * "TPID must be empty or valid FIO address"
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: max_fee
                  value: '200'
                  error: Fee exceeds supplied maximum.
        '403':
          description: |-
            Possible triggers:
            * Signer's FIO Public Key does not match actor
          schema:
            type: object
            properties: {}
            description: >-
              HTTP code 403 is returned when the request signature is not valid
              or this user is not allowed to sign this transaction.
            title: Error 403
          examples:
            application/json:
              type: invalid_signature
              message: Request signature not valid or not allowed.
      summary: 'Renew FIO Domain'
      description: >-
        This section defines the object which needs to be created before it's
        packed and signed for [push_transaction](#post-/push_transaction) and the response object returned in
        `processed->action_traces->receipt->response` string.

        ### `actions` parameters

        * account: `fio.address`

        * name: `renewdomain`
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              fio_domain:
                type: string
                title: FIO Domain
                minLength: 1
                maxLength: 62
                pattern: '^[a-z0-9-]+$'
              max_fee:
                type: integer
                title: Max fee
                description: >-
                  Maximum amount of SUFs the user is willing to pay for fee.
                  Should be preceded by /get_fee for correct value.
              tpid:
                type: string
                title: TPID
                description: |-
                  * FIO Address of the wallet which generates this transaction.
                  * This FIO Address will be paid 10% of the fee.
                  * See FIO Protocol#TPIDs for details.
                  * Set to empty if not known.
              actor:
                type: string
                title: Actor
                description: 'See [Generating actor](/actor)'
            required:
              - fio_domain
              - max_fee
              - tpid
              - actor
            example:
              fio_domain: alice
              max_fee: 30000000000
              tpid: rewards@wallet
              actor: aftyershcu22
          description: >-
            This section defines the `data` object which needs to be created before
            it's packed and signed.
      operationId: renew_fio_domain_model
      tags:
        - Actions
  renewaddress:
    options:
      responses:
        '200':
          description: >-
            This section defines only the contents of the response returned in
            `processed->action_traces->receipt->response` string. See [push_transaction](#post-/push_transaction)
            section for the definition of the actual response.
          schema:
            type: object
            properties:
              status:
                type: string
                description: OK
              expiration:
                type: string
                format: date-time
                title: Date/time
              fee_collected:
                title: Fee collected
                description: Amount of SUFs collected as fee
                type: integer
          examples:
            application/json:
              status: OK
              expiration: '2020-09-11T18:30:56'
              fee_collected: 30000000000
        '400':
          description: |-
            Possible error messages:
            * "Invalid FIO address"
            * "FIO Domain expired"
            * "Invalid fee value"
            * "Insufficient funds to cover fee"
            * "Fee exceeds supplied maximum"
            * "TPID must be empty or valid FIO address"
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: max_fee
                  value: '200'
                  error: Fee exceeds supplied maximum.
        '403':
          description: |-
            Possible triggers:
            * Signer's FIO Public Key does not match actor
          schema:
            type: object
            properties: {}
            description: >-
              HTTP code 403 is returned when the request signature is not valid
              or this user is not allowed to sign this transaction.
            title: Error 403
          examples:
            application/json:
              type: invalid_signature
              message: Request signature not valid or not allowed.
      summary: 'Renew FIO Address'
      description: >-
        This section defines the object which needs to be created before it's
        packed and signed for [push_transaction](#post-/push_transaction) and the response object returned in
        `processed->action_traces->receipt->response` string.

        ### `actions` parameters

        * account: `fio.address`

        * name: `renewaddress`
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              fio_address:
                type: string
                title: FIO Address
                minLength: 3
                maxLength: 64
                pattern: >-
                  ^(?:(?=.{3,64}$)[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))@[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))$)
              max_fee:
                type: integer
                title: Max fee
                description: >-
                  Maximum amount of SUFs the user is willing to pay for fee.
                  Should be preceded by /get_fee for correct value.
              tpid:
                type: string
                title: TPID
                description: |-
                  * FIO Address of the wallet which generates this transaction.
                  * This FIO Address will be paid 10% of the fee.
                  * See FIO Protocol#TPIDs for details.
                  * Set to empty if not known.
              actor:
                type: string
                title: Actor
                description: 'See [Generating actor](/actor)'
            required:
              - fio_address
              - max_fee
              - tpid
              - actor
            example:
              fio_address: purse@alice
              max_fee: 30000000000
              tpid: rewards@wallet
              actor: aftyershcu22
          description: >-
            This section defines the `data` object which needs to be created before
            it's packed and signed.
      operationId: renew_fio_address_model
      tags:
        - Actions
  addaddress:
    options:
      responses:
        '200':
          description: >-
            This section defines only the contents of the response returned in
            `processed->action_traces->receipt->response` string. See [push_transaction](#post-/push_transaction)
            section for the definition of the actual response.
          schema:
            type: object
            properties:
              status:
                type: string
                description: OK
              fee_collected:
                title: Fee collected
                description: Amount of SUFs collected as fee
                type: integer
          examples:
            application/json:
              status: OK
              fee_collected: 0
        '400':
          description: >-
            Possible error messages:

            * "Invalid Chain Code"

            * "Invalid token code format"

            * "Invalid public address format"

            * "Min 1, Max 5 public addresses are allowed"

            * "FIO Address expired"

            * "FIO Domain expired"

            * "Invalid fee value"

            * "Insufficient funds to cover fee"

            * "Fee exceeds supplied maximum"

            * "TPID must be empty or valid FIO address"

            * "Maximum token codes mapped to single FIO Address reached. Only
            100 can be mapped."
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: token_code
                  value: BTC!
                  error: Invalid token code format
        '403':
          description: |-
            Possible triggers:
            * Signer's FIO Public Key does not match actor
            * FIO Address not owned by FIO Public Key in signature
          schema:
            type: object
            properties: {}
            description: >-
              HTTP code 403 is returned when the request signature is not valid
              or this user is not allowed to sign this transaction.
            title: Error 403
          examples:
            application/json:
              type: invalid_signature
              message: Request signature not valid or not allowed.
        '404':
          description: |-
            Possible error messages:
            * "FIO Address not found"
          examples:
            application/json:
              message: FIO Address not found
      summary: 'Add public address'
      description: >-
        This section defines the object which needs to be created before it's
        packed and signed for [push_transaction](#post-/push_transaction) and the response object returned in
        `processed->action_traces->receipt->response` string.

        ### `actions` parameters

        * account: `fio.address`

        * name: `addaddress`
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              fio_address:
                type: string
                title: FIO Address
                minLength: 3
                maxLength: 64
                pattern: >-
                  ^(?:(?=.{3,64}$)[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))@[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))$)
              public_addresses:
                type: array
                uniqueItems: true
                minItems: 1
                maxItems: 5
                description: >-
                  Maximum of 5 token codes can be mapped to single FIO Address
                  at any one time. See [Mapping Public
                  Addresses](/wallet-integration-guide/mapping-pub-addresses)
                  for details.
                items:
                  type: object
                  properties:
                    chain_code:
                      type: string
                      title: Token/chain code
                      minLength: 1
                      maxLength: 10
                      pattern: '^[A-Z0-9]+$'
                      description: >
                        Chain code identifies the blockchain, while token code
                        identifies a token on that blockchain. For example: for
                        USDC: chain_code = ETH and token_code = USDC, for BTC:
                        chain_code = BTC and token_code = BTC. For list of chain
                        codes you can refer to
                        [SLIP-44](https://github.com/satoshilabs/slips/blob/master/slip-0044.md)
                        and for list of token code refer to the specific
                        blockchain.
                    token_code:
                      type: string
                      title: Token/chain code
                      minLength: 1
                      maxLength: 10
                      pattern: '^[A-Z0-9]+$'
                      description: >
                        Chain code identifies the blockchain, while token code
                        identifies a token on that blockchain. For example: for
                        USDC: chain_code = ETH and token_code = USDC, for BTC:
                        chain_code = BTC and token_code = BTC. For list of chain
                        codes you can refer to
                        [SLIP-44](https://github.com/satoshilabs/slips/blob/master/slip-0044.md)
                        and for list of token code refer to the specific
                        blockchain.
                    public_address:
                      type: object
                      title: Native Blockchain Public Address
                      description: "This is the public address on another blockchain. Both integrated addresses as well as URI Scheme are supported.\n\n**Integrated Address**\nIf the blockchain supports it, an integrated address may be passed in just like standard public address. The FIO protocol does not perform validation on the passed string.\n\n**URI Scheme**\nFIO Protocol will support formatting of public addresses using URI were certain attributes are appended to the public address following a '?' and delimited with '&'. To allow inter-wallet operability, the following standardized parameters will be supported in official FIO Protocol SDKs.\n\n**Parameters**\n* dt - Ripple\n* memo - Any - use as generic memo field\n* memo_id -\tStellar\n* memo_text -\tStellar\n* memo_hash -\tStellar\n* memo_return -\tStellar\n* payment_id - Monero\n"
                  required:
                    - chain_code
                    - token_code
                    - public_address
              max_fee:
                type: integer
                title: Max fee
                description: >-
                  Maximum amount of SUFs the user is willing to pay for fee.
                  Should be preceded by /get_fee for correct value.
              tpid:
                type: string
                title: TPID
                description: |-
                  * FIO Address of the wallet which generates this transaction.
                  * This FIO Address will be paid 10% of the fee.
                  * See FIO Protocol#TPIDs for details.
                  * Set to empty if not known.
              actor:
                type: string
                title: Actor
                description: 'See [Generating actor](/actor)'
            required:
              - fio_address
              - public_addresses
              - max_fee
              - tpid
              - actor
            example:
              fio_address: purse@alice
              public_addresses:
                - chain_code: BTC
                  token_code: BTC
                  public_address: 1PMycacnJaSqwwJqjawXBErnLsZ7RkXUAs
                - chain_code: ETH
                  token_code: ETH
                  public_address: '0xab5801a7d398351b8be11c439e05c5b3259aec9b'
              max_fee: 0
              tpid: rewards@wallet
              actor: aftyershcu22
          description: >-
            This section defines the `data` object which needs to be created before
            it's packed and signed.


            Please read [Mapping Public
            Addresses](/wallet-integration-guide/mapping-pub-addresses) to
            better understand how public address mappings work.
      operationId: add_pub_address_model
      tags:
        - Actions
  setdomainpub:
    options:
      responses:
        '200':
          description: >-
            This section defines only the contents of the response returned in
            `processed->action_traces->receipt->response` string. See [push_transaction](#post-/push_transaction)
            section for the definition of the actual response.
          schema:
            type: object
            properties:
              status:
                type: string
                description: OK
              fee_collected:
                title: Fee collected
                description: Amount of SUFs collected as fee
                type: integer
          examples:
            application/json:
              status: OK
              fee_collected: 10000000
        '400':
          description: |-
            Possible error messages:
            * "Invalid FIO domain"
            * "FIO Domain expired"
            * "Only 0 or 1 allowed"
            * "Invalid fee value"
            * "Insufficient funds to cover fee"
            * "Fee exceeds supplied maximum"
            * "TPID must be empty or valid FIO address"
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: max_fee
                  value: '200'
                  error: Fee exceeds supplied maximum.
        '403':
          description: |-
            Possible triggers:
            * Signer's FIO Public Key does not match actor
          schema:
            type: object
            properties: {}
            description: >-
              HTTP code 403 is returned when the request signature is not valid
              or this user is not allowed to sign this transaction.
            title: Error 403
          examples:
            application/json:
              type: invalid_signature
              message: Request signature not valid or not allowed.
      summary: 'Set FIO Domain''s public flag'
      description: >-
        This section defines the object which needs to be created before it's
        packed and signed for [push_transaction](#post-/push_transaction) and the response object returned in
        `processed->action_traces->receipt->response` string.

        ### `actions` parameters

        * account: "fio.address"

        * name: `setdomainpub`
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              fio_domain:
                type: string
                title: FIO Domain
                minLength: 1
                maxLength: 62
                pattern: '^[a-z0-9-]+$'
              is_public:
                type: integer
                description: |-
                  * 1 - allows anyone to register FIO Address
                  * 0 - only owner of domain can register FIO Address
              max_fee:
                type: integer
                title: Max fee
                description: >-
                  Maximum amount of SUFs the user is willing to pay for fee.
                  Should be preceded by /get_fee for correct value.
              tpid:
                type: string
                title: TPID
                description: |-
                  * FIO Address of the wallet which generates this transaction.
                  * This FIO Address will be paid 10% of the fee.
                  * See FIO Protocol#TPIDs for details.
                  * Set to empty if not known.
              actor:
                type: string
                title: Actor
                description: 'See [Generating actor](/actor)'
            required:
              - fio_domain
              - is_public
              - max_fee
              - tpid
              - actor
            example:
              fio_domain: alice
              is_public: 1
              max_fee: 2000000000
              tpid: rewards@wallet
              actor: aftyershcu22
          description: >-
            This section defines the `data` object which needs to be created before
            it's packed and signed.
      operationId: set_fio_domain_public_model
      tags:
        - Actions
  newfundsreq:
    options:
      responses:
        '200':
          description: >-
            This section defines only the contents of the response returned in
            `processed->action_traces->receipt->response` string. See [push_transaction](#post-/push_transaction)
            section for the definition of the actual response.
          schema:
            type: object
            properties:
              fio_request_id:
                type: integer
                description: ID of FIO Request created
              status:
                type: string
                title: FIO Request status
                enum:
                  - requested
                  - request_rejected
                  - sent_to_blockchain
                description: Status of FIO Request
              fee_collected:
                title: Fee collected
                description: Amount of SUFs collected as fee
                type: integer
          examples:
            application/json:
              fio_request_id: 10
              status: requested
              fee_collected: 0
        '400':
          description: |-
            Possible error messages:
            * "No such FIO Address"
            * "FIO Address expired"
            * "FIO Domain expired"
            * "Requires min 64 max 296 size"
            * "Invalid fee value"
            * "Fee exceeds maximum"
            * "Insufficient funds to cover fee"
            * "Fee exceeds supplied maximum"
            * "TPID must be empty or valid FIO address"
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: payer_fio_address
                  value: asdfg@pqowieuryt67
                  error: No such FIO Address
        '403':
          description: |-
            Possible triggers:
            * Signer's FIO Public Key does not match actor
            * Payee FIO Address not owned by FIO Public Key in signature
          examples:
            application/json:
              type: invalid_signature
              message: Request signature not valid or not allowed.
          schema:
            type: object
            properties: {}
            description: >-
              HTTP code 403 is returned when the request signature is not valid
              or this user is not allowed to sign this transaction.
            title: Error 403
      summary: 'Create new funds request'
      description: >-
        This section defines the object which needs to be created before it's
        packed and signed for [push_transaction](#post-/push_transaction) and the response object returned in
        `processed->action_traces->receipt->response` string.

        ### `actions` parameters

        * account: `fio.reqobt`

        * name: `newfundsreq`
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              payer_fio_address:
                type: string
                title: FIO Address
                minLength: 3
                maxLength: 64
                pattern: >-
                  ^(?:(?=.{3,64}$)[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))@[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))$)
              payee_fio_address:
                type: string
                title: FIO Address
                minLength: 3
                maxLength: 64
                pattern: >-
                  ^(?:(?=.{3,64}$)[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))@[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))$)
              content:
                type: object
                title: FIO Request encrypted content
                description: >-
                  Certain content inside FIO Request is encrypted and packed
                  into this field.


                  Min 64 characters

                  Max 296 characters


                  See [Encrypting FIO
                  Data](/wallet-integration-guide/encrypting-fio-data) for more
                  information.
                required:
                  - payee_public_address
                  - amount
                  - chain_code
                  - token_code
                  - memo
                  - hash
                  - offline_url
                  - future_use1
                  - future_use2
                  - future_use3
                  - future_use4
                  - future_use5
                properties:
                  payee_public_address:
                    type: string
                    title: Native Blockchain Public Address
                    description: "This is the public address on another blockchain. Both integrated addresses as well as URI Scheme are supported.\n\n**Integrated Address**\nIf the blockchain supports it, an integrated address may be passed in just like standard public address. The FIO protocol does not perform validation on the passed string.\n\n**URI Scheme**\nFIO Protocol will support formatting of public addresses using URI were certain attributes are appended to the public address following a '?' and delimited with '&'. To allow inter-wallet operability, the following standardized parameters will be supported in official FIO Protocol SDKs.\n\n**Parameters**\n* dt - Ripple\n* memo - Any - use as generic memo field\n* memo_id -\tStellar\n* memo_text -\tStellar\n* memo_hash -\tStellar\n* memo_return -\tStellar\n* payment_id - Monero\n"
                  amount:
                    type: string
                    description: Amount requested.
                  chain_code:
                    type: string
                    title: Token/chain code
                    minLength: 1
                    maxLength: 10
                    pattern: '^[A-Z0-9]+$'
                    description: >
                      Chain code identifies the blockchain, while token code
                      identifies a token on that blockchain. For example: for
                      USDC: chain_code = ETH and token_code = USDC, for BTC:
                      chain_code = BTC and token_code = BTC. For list of chain
                      codes you can refer to
                      [SLIP-44](https://github.com/satoshilabs/slips/blob/master/slip-0044.md)
                      and for list of token code refer to the specific
                      blockchain.
                  token_code:
                    type: string
                    title: Token/chain code
                    minLength: 1
                    maxLength: 10
                    pattern: '^[A-Z0-9]+$'
                    description: >
                      Chain code identifies the blockchain, while token code
                      identifies a token on that blockchain. For example: for
                      USDC: chain_code = ETH and token_code = USDC, for BTC:
                      chain_code = BTC and token_code = BTC. For list of chain
                      codes you can refer to
                      [SLIP-44](https://github.com/satoshilabs/slips/blob/master/slip-0044.md)
                      and for list of token code refer to the specific
                      blockchain.
                  memo:
                    type: string
                    description: |-
                      Free-form text to pass to Payer.

                      Use either memo or hash/offline_url, but not both.
                  hash:
                    type: string
                    description: |-
                      Hash of off-chain data.

                      Use either memo or hash/offline_url, but not both.
                  offline_url:
                    type: string
                    description: |-
                      Url of where to find off-chain data.

                      Use either memo or hash/offline_url, but not both.
                  future_use1:
                    type: string
                    description: Do not use
                  future_use2:
                    type: string
                    description: Do not use
                  future_use3:
                    type: string
                    description: Do not use
                  future_use4:
                    type: string
                    description: Do not use
                  future_use5:
                    type: string
                    description: Do not use
              max_fee:
                type: integer
                title: Max fee
                description: >-
                  Maximum amount of SUFs the user is willing to pay for fee.
                  Should be preceded by /get_fee for correct value.
              actor:
                type: string
                title: Actor
                description: 'See [Generating actor](/actor)'
            required:
              - payer_fio_address
              - payee_fio_address
              - content
              - max_fee
              - actor
            example:
              payer_fio_address: pawel788242@woohoo827390
              payee_fio_address: pawel82825@woohoo827390
              content: >-
                JhTnxX9ntI9n1eucNuJzHS1/JXeLj+GYmPD1uXG/5PBixQeHg40d4p4yHCm6fxfn7eKzcYFlV2AFrQ7j/kRQJUk5OcvJzZtCYuvIx6snciwhOvYtBlN7MWKavxWV3XGAJHBrQxxcHQGW0rtCZM4KzVYYqXWMzihN6mRGDqxGALc=
              max_fee: 0
              tpid: rewards@wallet
              actor: gev2yeim1cjy
          description: >-
            This section defines the `data` object which needs to be created before
            it's packed and signed.
      operationId: new_funds_request_model
      tags:
        - Actions
  rejectfndreq:
    options:
      responses:
        '200':
          description: >-
            This section defines only the contents of the response returned in
            `processed->action_traces->receipt->response` string. See [push_transaction](#post-/push_transaction)
            section for the definition of the actual response.
          schema:
            type: object
            properties:
              status:
                type: string
                title: FIO Request status
                enum:
                  - requested
                  - request_rejected
                  - sent_to_blockchain
                description: Status of FIO Request
              fee_collected:
                title: Fee collected
                description: Amount of SUFs collected as fee
                type: integer
          examples:
            application/json:
              status: request_rejected
              fee_collected: 0
        '400':
          description: |-
            Possible error messages:
            * "No such FIO Request"
            * "Invalid fee value"
            * "Insufficient funds to cover fee"
            * "Fee exceeds supplied maximum"
            * "FIO Address expired"
            * "FIO Domain expired"
            * "TPID must be empty or valid FIO address"
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: fio_request_id
                  value: '10000000000'
                  error: No such FIO Request
        '403':
          description: >-
            Possible triggers:

            * Signer's FIO Public Key does not match actor

            * Payer's FIO Address in specified fio_request_id is not owned by
            the public key in signature
          schema:
            type: object
            properties: {}
            description: >-
              HTTP code 403 is returned when the request signature is not valid
              or this user is not allowed to sign this transaction.
            title: Error 403
          examples:
            application/json:
              type: invalid_signature
              message: Request signature not valid or not allowed.
      summary: 'Reject funds request'
      operationId: reject_funds_request_model
      description: >-
        This section defines the object which needs to be created before it's
        packed and signed for [push_transaction](#post-/push_transaction) and the response object returned in
        `processed->action_traces->receipt->response` string.

        ### `actions` parameters

        * account: `fio.reqobt`

        * name: `rejectfndreq`
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              fio_request_id:
                type: string
              max_fee:
                type: integer
                title: Max fee
                description: >-
                  Maximum amount of SUFs the user is willing to pay for fee.
                  Should be preceded by /get_fee for correct value.
              tpid:
                type: string
                title: TPID
                description: |-
                  * FIO Address of the wallet which generates this transaction.
                  * This FIO Address will be paid 10% of the fee.
                  * See FIO Protocol#TPIDs for details.
                  * Set to empty if not known.
              actor:
                type: string
                title: Actor
                description: 'See [Generating actor](/actor)'
            required:
              - fio_request_id
              - max_fee
              - tpid
              - actor
            example:
              fio_request_id: '10'
              max_fee: 0
              tpid: rewards@wallet
              actor: aftyershcu22
          description: >-
            This section defines the `data` object which needs to be created before
            it's packed and signed.
      tags:
        - Actions
  recordobt:
    options:
      responses:
        '200':
          description: >-
            This section defines only the contents of the response returned in
            `processed->action_traces->receipt->response` string. See [push_transaction](#post-/push_transaction)
            section for the definition of the actual response.
          schema:
            type: object
            properties:
              status:
                type: string
                description: sent_to_blockchain
              fee_collected:
                title: Fee collected
                description: Amount of SUFs collected as fee
                type: integer
          examples:
            application/json:
              status: sent_to_blockchain
              fee_collected: 0
        '400':
          description: |-
            Possible error messages:
            * "No such FIO Address"
            * "FIO Address expired"
            * "FIO Domain expired"
            * "Requires min 64 max 432 size"
            * "No such FIO Request"
            * "Invalid fee value"
            * "Insufficient funds to cover fee"
            * "Fee exceeds supplied maximum"
            * "TPID must be empty or valid FIO address"
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: payee_fio_address
                  value: asdfg@pqowieuryt67
                  error: No such FIO Address
        '403':
          description: |-
            Possible triggers:
            * Signer's FIO Public Key does not match actor
            * Payer's FIO Address not owned by FIO Public Key in signature
          schema:
            type: object
            properties: {}
            description: >-
              HTTP code 403 is returned when the request signature is not valid
              or this user is not allowed to sign this transaction.
            title: Error 403
          examples:
            application/json:
              type: invalid_signature
              message: Request signature not valid or not allowed.
      summary: 'Records send on another blockchain'
      description: >-
        This section defines the object which needs to be created before it's
        packed and signed for [push_transaction](#post-/push_transaction) and the response object returned in
        `processed->action_traces->receipt->response` string.

        ### `actions` parameters

        * account: `fio.reqobt`

        * name: `recordobt`
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              payer_fio_address:
                type: string
                description: >-
                  FIO Address of the payer. This address initiated payment. Also
                  MUST be the same one signing the transaction
              payee_fio_address:
                type: string
                description: FIO Address of the payee. This address is receiving payment.
              content:
                type: object
                title: FIO Data encrypted content
                description: >-
                  Certain content inside FIO Data is encrypted and packed into
                  this field.


                  Min 64 characters

                  Max 432 characters


                  See [Encrypting FIO
                  Data](/wallet-integration-guide/encrypting-fio-data) for more
                  information.
                required:
                  - payer_public_address
                  - payee_public_address
                  - amount
                  - chain_code
                  - token_code
                  - status
                  - obt_id
                  - memo
                  - hash
                  - offline_url
                properties:
                  payer_public_address:
                    type: string
                    description: Public address on other blockchain of user sending funds.
                  payee_public_address:
                    type: string
                    description: >-
                      Public address on other blockchain of user receiving
                      funds.
                  amount:
                    type: string
                    description: Amount sent.
                  chain_code:
                    type: string
                    title: Token/chain code
                    minLength: 1
                    maxLength: 10
                    pattern: '^[A-Z0-9]+$'
                    description: >
                      Chain code identifies the blockchain, while token code
                      identifies a token on that blockchain. For example: for
                      USDC: chain_code = ETH and token_code = USDC, for BTC:
                      chain_code = BTC and token_code = BTC. For list of chain
                      codes you can refer to
                      [SLIP-44](https://github.com/satoshilabs/slips/blob/master/slip-0044.md)
                      and for list of token code refer to the specific
                      blockchain.
                  token_code:
                    type: string
                    title: Token/chain code
                    minLength: 1
                    maxLength: 10
                    pattern: '^[A-Z0-9]+$'
                    description: >
                      Chain code identifies the blockchain, while token code
                      identifies a token on that blockchain. For example: for
                      USDC: chain_code = ETH and token_code = USDC, for BTC:
                      chain_code = BTC and token_code = BTC. For list of chain
                      codes you can refer to
                      [SLIP-44](https://github.com/satoshilabs/slips/blob/master/slip-0044.md)
                      and for list of token code refer to the specific
                      blockchain.
                  status:
                    type: string
                    description: |-
                      Status of this OBT. Allowed statuses are:
                      * sent_to_blockchain
                  obt_id:
                    type: string
                    description: >-
                      Other Blockchain Transaction ID (OBT ID), i.e Bitcoin
                      transaction ID
                  memo:
                    type: string
                    description: |-
                      Free-form text to pass to Payee.

                      Use either memo or hash/offline_url, but not both.
                  hash:
                    type: string
                    description: |-
                      Hash of off-chain data.

                      Use either memo or hash/offline_url, but not both.
                  offline_url:
                    type: string
                    description: |-
                      Url of where to find off-chain data.

                      Use either memo or hash/offline_url, but not both.
              fio_request_id:
                type: string
                description: >-
                  * Send empty if no FIO Request ID

                  * ID of FIO Request, if this Record Send transaction is in
                  response to a previously received FIO Request.
              max_fee:
                type: integer
                title: Max fee
                description: >-
                  Maximum amount of SUFs the user is willing to pay for fee.
                  Should be preceded by /get_fee for correct value.
              tpid:
                type: string
                title: TPID
                description: |-
                  * FIO Address of the wallet which generates this transaction.
                  * This FIO Address will be paid 10% of the fee.
                  * See FIO Protocol#TPIDs for details.
                  * Set to empty if not known.
              actor:
                type: string
                title: Actor
                description: 'See [Generating actor](/actor)'
            required:
              - payer_fio_address
              - payee_fio_address
              - content
              - fio_request_id
              - max_fee
              - tpid
              - actor
            example:
              payer_fio_address: purse@alice
              payee_fio_address: crypto@bob
              content: >-
                JhTnxX9ntI9n1eucNuJzHS1/JXeLj+GYmPD1uXG/5PBixQeHg40d4p4yHCm6fxfn7eKzcYFlV2AFrQ7j/kRQJUk5OcvJzZtCYuvIx6snciwhOvYtBlN7MWKavxWV3XGAJHBrQxxcHQGW0rtCZM4KzVYYqXWMzihN6mRGDqxGALc=
              fio_request_id: '10'
              max_fee: 0
              tpid: rewards@wallet
              actor: aftyershcu22
          description: >-
            This section defines the `data` object which needs to be created before
            it's packed and signed.
      operationId: record_obt_data_model
      tags:
        - Actions
  trnsfiopubky:
    options:
      responses:
        '200':
          description: >-
            This section defines only the contents of the response returned in
            `processed->action_traces->receipt->response` string. See [push_transaction](#post-/push_transaction)
            section for the definition of the actual response.
          schema:
            type: object
            properties:
              status:
                type: string
                description: OK
              fee_collected:
                title: Fee collected
                description: Amount of SUFs collected as fee
                type: integer
          examples:
            application/json:
              status: OK
              fee_collected: 250000000
        '400':
          description: |-
            Possible error messages:
            * "Invalid FIO Public Key"
            * "Invalid amount value"
            * "Insufficient balance"
            * "Invalid fee value"
            * "Insufficient funds to cover fee"
            * "Fee exceeds supplied maximum"
            * "TPID must be empty or valid FIO address"
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: amount
                  value: '100000000000000000'
                  error: Insufficient balance
        '403':
          description: |-
            Possible triggers:
            * Signer's FIO Public Key does not match actor
          schema:
            type: object
            properties: {}
            description: >-
              HTTP code 403 is returned when the request signature is not valid
              or this user is not allowed to sign this transaction.
            title: Error 403
          examples:
            application/json:
              type: invalid_signature
              message: Request signature not valid or not allowed.
      summary: 'Transfer FIO tokens'
      description: >-
        This section defines the object which needs to be created before it's
        packed and signed for [push_transaction](#post-/push_transaction) and the response object returned in
        `processed->action_traces->receipt->response` string.

        ### `actions` parameters

        * account: `fio.token`

        * name: `trnsfiopubky`
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              payee_public_key:
                type: string
                title: FIO Public Key
                description: Valid WIF Public Key with FIO Prefix
              amount:
                type: integer
                description: Amount sent in SUFs
              max_fee:
                type: integer
                title: Max fee
                description: >-
                  Maximum amount of SUFs the user is willing to pay for fee.
                  Should be preceded by /get_fee for correct value.
              tpid:
                type: string
                title: TPID
                description: |-
                  * FIO Address of the wallet which generates this transaction.
                  * This FIO Address will be paid 10% of the fee.
                  * See FIO Protocol#TPIDs for details.
                  * Set to empty if not known.
              actor:
                type: string
                title: Actor
                description: 'See [Generating actor](/actor)'
            example:
              payee_public_key: FIO8PRe4WRZJj5mkem6qVGKyvNFgPsNnjNN6kPhh6EaCpzCVin5Jj
              amount: '1000000000'
              max_fee: 250000000
              tpid: rewards@wallet
              actor: aftyershcu22
          description: >-
            This section defines the `data` object which needs to be created before
            it's packed and signed.
      operationId: transfer_tokens_pub_key_model
      tags:
        - Actions
  burnexpired:
    options:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              status:
                type: string
                description: OK
              items_burned:
                type: integer
          examples:
            application/json:
              status: OK
              items_burned: 100
        '400':
          description: |-
            Possible triggers:
            * No work to be performed
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: burnexpired
                  value: burnexpired
                  error: No work.
        '403':
          description: |-
            Possible triggers:
            * Signer's FIO Public Key does not match actor
          schema:
            type: object
            properties: {}
            description: >-
              HTTP code 403 is returned when the request signature is not valid
              or this user is not allowed to sign this transaction.
            title: Error 403
          examples:
            application/json:
              type: invalid_signature
              message: Request signature not valid or not allowed.
      summary: 'Burn expired FIO Addresses and Domains'
      description: >-
        This section defines the object which needs to be created before it's
        packed and signed for [push_transaction](#post-/push_transaction) and the response object returned in
        `processed->action_traces->receipt->response` string.

        ### `actions` parameters

        * account: `fio.address`

        * name: `burnexpired`
      operationId: burn_expired_model
      parameters: []
      tags:
        - Actions
  tpidclaim:
    options:
      responses:
        '202':
          description: >-
            This section defines only the contents of the response returned in
            `processed->action_traces->receipt->response` string. See [push_transaction](#post-/push_transaction)
            section for the definition of the actual response.
          schema:
            type: object
            properties:
              status:
                type: string
                description: OK
              tpids_paid:
                type: integer
          examples:
            application/json:
              status: OK
              tpids_paid: 100
        '400':
          description: |-
            Possible triggers:
            * No work to perform
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: tpidclaim
                  value: tpidclaim
                  error: No work.
        '403':
          description: |-
            Possible triggers:
            * Signer's FIO Public Key does not match actor
          schema:
            type: object
            properties: {}
            description: >-
              HTTP code 403 is returned when the request signature is not valid
              or this user is not allowed to sign this transaction.
            title: Error 403
          examples:
            application/json:
              type: invalid_signature
              message: Request signature not valid or not allowed.
      summary: 'Pay rewards to TPIDs'
      description: >-
        This section defines the object which needs to be created before it's
        packed and signed for [push_transaction](#post-/push_transaction) and the response object returned in
        `processed->action_traces->receipt->response` string.

        ### `actions` parameters

        * account: `fio.treasury`

        * name: `tpidclaim`
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              actor:
                type: string
                title: Actor
                description: 'See [Generating actor](/actor)'
            example:
              actor: aftyershcu22
          description: >-
            This section defines the `data` object which needs to be created before
            it's packed and signed.
      operationId: pay_tpid_rewards_model
      tags:
        - Actions
  bpclaim:
    options:
      responses:
        '200':
          description: >-
            This section defines only the contents of the response returned in
            `processed->action_traces->receipt->response` string. See [push_transaction](#post-/push_transaction)
            section for the definition of the actual response.
          schema:
            type: object
            properties:
              status:
                type: string
                description: OK
              amount:
                type: integer
                description: Amount of payment in SUFs
          examples:
            application/json:
              status: OK
              amount: 100000000000
        '400':
          description: |-
            Possible error messages:
            * "Invalid FIO Address"
            * "FIO Address expired"
            * "FIO Domain expired"
            * "FIO Address not producer or nothing payable"
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: fio_address
                  value: purse@alice
                  error: FIO Address expired
        '403':
          description: |-
            Possible triggers:
            * Signer's FIO Public Key does not match actor
            * FIO Address not owned by FIO Public Key in signature
          schema:
            type: object
            properties: {}
            description: >-
              HTTP code 403 is returned when the request signature is not valid
              or this user is not allowed to sign this transaction.
            title: Error 403
          examples:
            application/json:
              type: invalid_signature
              message: Request signature not valid or not allowed.
      summary: 'Pay BP rewards'
      description: >-
        This section defines the object which needs to be created before it's
        packed and signed for [push_transaction](#post-/push_transaction) and the response object returned in
        `processed->action_traces->receipt->response` string.

        ### `actions` parameters

        * account: `fio.treasury`

        * name: `bpclaim`
      operationId: claim_bp_rewards_model
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              fio_address:
                type: string
                title: FIO Address
                minLength: 3
                maxLength: 64
                pattern: >-
                  ^(?:(?=.{3,64}$)[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))@[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))$)
              actor:
                type: string
                title: Actor
                description: 'See [Generating actor](/actor)'
            example:
              fio_address: producer@bob
              actor: aftyershcu22
          description: >-
            This section defines the `data` object which needs to be created before
            it's packed and signed.
      tags:
       - Actions
  regproducer:
    options:
      responses:
        '202':
          description: >-
            This section defines only the contents of the response returned in
            `processed->action_traces->receipt->response` string. See [push_transaction](#post-/push_transaction)
            section for the definition of the actual response.
          schema:
            type: object
            properties:
              status:
                type: string
                description: OK
              fee_collected:
                title: Fee collected
                description: Amount of SUFs collected as fee
                type: integer
          examples:
            application/json:
              status: OK
              fee_collected: 10000000000
        '400':
          description: |-
            Possible error messages:
            * "Invalid FIO Address format"
            * "FIO Address expired"
            * "FIO Domain expired"
            * "FIO Address not registered"
            * "Already registered as producer"
            * "Invalid FIO Public Key"
            * "Invalid url"
            * "Invalid location"
            * "Invalid fee value"
            * "Insufficient funds to cover fee"
            * "Fee exceeds supplied maximum"
            * "Already registered as producer"
            * "TPID must be empty or valid FIO address"
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: max_fee
                  value: '200'
                  error: Fee exceeds supplied maximum.
        '403':
          description: |-
            Possible triggers:
            * Signer's FIO Public Key does not match actor
            * FIO Address not owned by FIO Public Key in signature
          schema:
            type: object
            properties: {}
            description: >-
              HTTP code 403 is returned when the request signature is not valid
              or this user is not allowed to sign this transaction.
            title: Error 403
          examples:
            application/json:
              type: invalid_signature
              message: Request signature not valid or not allowed.
      summary: 'Registers a block producer'
      description: >-
        This section defines the object which needs to be created before it's
        packed and signed for [push_transaction](#post-/push_transaction) and the response object returned in
        `processed->action_traces->receipt->response` string.

        ### `actions` parameters

        * account: `eosio`

        * name: `regproducer`
      operationId: register_producer_model
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              fio_address:
                type: string
                title: FIO Address
                minLength: 3
                maxLength: 64
                pattern: >-
                  ^(?:(?=.{3,64}$)[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))@[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))$)
              fio_pub_key:
                type: string
                title: FIO Public Key
                description: Valid WIF Public Key with FIO Prefix
              url:
                type: string
                description: Url of block producer website
              location:
                type: integer
                description: "Location ID of where BPs servers are located. See table below.\n\nLocations\n* 10\tEast Asia\n* 20\tAustralia\n* 30\tWest Asia\n* 40\tAfrica\n* 50\tEurope\n* 60\tEast North America\n* 70\tSouth America\n* 80\tWest North America"
              actor:
                type: string
                title: Actor
                description: 'See [Generating actor](/actor)'
              max_fee:
                type: integer
                title: Max fee
                description: >-
                  Maximum amount of SUFs the user is willing to pay for fee.
                  Should be preceded by /get_fee for correct value.
            required:
              - fio_address
              - fio_pub_key
              - url
              - location
              - actor
              - max_fee
            example:
              fio_address: producer@bob
              fio_pub_key: FIO7tHihSLJVRQ2HsiVGTXAh3RgfXQvVVPpMm8pwQtiTHQHPnY5dH
              url: 'https://bobp.io/'
              location: 80
              actor: aftyershcu22
              max_fee: 10000000000
          description: >-
            This section defines the `data` object which needs to be created before
            it's packed and signed.
      tags:
       - Actions
  unregprod:
    options:
      responses:
        '200':
          description: >-
            This section defines only the contents of the response returned in
            `processed->action_traces->receipt->response` string. See [push_transaction](#post-/push_transaction)
            section for the definition of the actual response.
          schema:
            type: object
            properties:
              status:
                type: string
                description: OK
              fee_collected:
                title: Fee collected
                description: Amount of SUFs collected as fee
                type: integer
          examples:
            application/json:
              status: OK
              fee_collected: 10000000
        '400':
          description: |-
            Possible error messages:
            * "Invalid FIO Address format"
            * "FIO Address expired"
            * "FIO Domain expired"
            * "FIO Address not registered"
            * "Invalid fee value"
            * "Insufficient funds to cover fee"
            * "Fee exceeds supplied maximum"
            * "Not registered as producer"
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: max_fee
                  value: '200'
                  error: Fee exceeds supplied maximum
        '403':
          description: |-
            Possible triggers:
            * Signer's FIO Public Key does not match actor
            * FIO Address not owned by FIO Public Key in signature
          schema:
            type: object
            properties: {}
            description: >-
              HTTP code 403 is returned when the request signature is not valid
              or this user is not allowed to sign this transaction.
            title: Error 403
          examples:
            application/json:
              type: invalid_signature
              message: Request signature not valid or not allowed.
      summary: 'Unregister a block producer'
      operationId: unregister_producer_model
      description: >-
        This section defines the object which needs to be created before it's
        packed and signed for [push_transaction](#post-/push_transaction) and the response object returned in
        `processed->action_traces->receipt->response` string.

        ### `actions` parameters

        * account: `eosio`

        * name: `unregprod`
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              fio_address:
                type: string
                title: FIO Address
                minLength: 3
                maxLength: 64
                pattern: >-
                  ^(?:(?=.{3,64}$)[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))@[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))$)
              actor:
                type: string
                title: Actor
                description: 'See [Generating actor](/actor)'
              max_fee:
                type: integer
                title: Max fee
                description: >-
                  Maximum amount of SUFs the user is willing to pay for fee.
                  Should be preceded by /get_fee for correct value.
            required:
              - fio_address
              - actor
              - max_fee
            example:
              fio_address: producer@bob
              actor: aftyershcu22
              max_fee: 10000000
          description: >-
            This section defines the `data` object which needs to be created before
            it's packed and signed.
      tags:
        - Actions
  voteproducer:
    options:
      responses:
        '200':
          description: >-
            This section defines only the contents of the response returned in
            `processed->action_traces->receipt->response` string. See [push_transaction](#post-/push_transaction)
            section for the definition of the actual response.
          schema:
            type: object
            properties:
              status:
                type: string
                description: OK
              fee_collected:
                title: Fee collected
                description: Amount of SUFs collected as fee
                type: integer
          examples:
            application/json:
              status: OK
              fee_collected: 10000000
        '400':
          description: |-
            Possible error messages:
            * "Invalid or duplicated producers"
            * "Invalid fee value"
            * "Insufficient funds to cover fee"
            * "Fee exceeds supplied maximum"
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: max_fee
                  value: '200'
                  error: Fee exceeds supplied maximum.
        '403':
          description: |-
            Possible triggers:
            * Signer's FIO Public Key does not match actor
          schema:
            type: object
            properties: {}
            description: >-
              HTTP code 403 is returned when the request signature is not valid
              or this user is not allowed to sign this transaction.
            title: Error 403
          examples:
            application/json:
              type: invalid_signature
              message: Request signature not valid or not allowed.
      summary: 'Vote on block producers'
      description: >-
        This section defines the object which needs to be created before it's
        packed and signed for [push_transaction](#post-/push_transaction) and the response object returned in
        `processed->action_traces->receipt->response` string.

        ### `actions` parameters

        * account: `eosio`

        * name: `voteproducer`
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - producers
              - fio_address
              - actor
              - max_fee
            properties:
              producers:
                type: array
                description: List of FIO Addresses of block producers to vote on.
                uniqueItems: true
                minItems: 1
                maxItems: 30
                items:
                  type: string
                  title: FIO Address
                  minLength: 3
                  maxLength: 64
                  pattern: >-
                    ^(?:(?=.{3,64}$)[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))@[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))$)
              fio_address:
                type: string
                title: FIO Address
                minLength: 3
                maxLength: 64
                pattern: >-
                  ^(?:(?=.{3,64}$)[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))@[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))$)
              actor:
                type: string
                title: Actor
                description: 'See [Generating actor](/actor)'
              max_fee:
                type: integer
                title: Max fee
                description: >-
                  Maximum amount of SUFs the user is willing to pay for fee.
                  Should be preceded by /get_fee for correct value.
            example:
              producers:
                - BP1
                - BP2
                - BP3
              fio_address: alice.purse
              actor: aftyershcu22
              max_fee: 10000000
          description: >-
            This section defines the `data` object which needs to be created before
            it's packed and signed.
      operationId: vote_producer_model
      tags:
        - Actions
  regproxy:
    options:
      responses:
        '200':
          description: >-
            This section defines only the contents of the response returned in
            `processed->action_traces->receipt->response` string. See [push_transaction](#post-/push_transaction)
            section for the definition of the actual response.
          schema:
            type: object
            properties:
              status:
                type: string
                description: OK
              fee_collected:
                title: Fee collected
                description: Amount of SUFs collected as fee
                type: integer
          examples:
            application/json:
              status: OK
              fee_collected: 10000000
        '400':
          description: |-
            Possible error messgaes:
            * "Invalid FIO Address format"
            * "FIO Address expired"
            * "FIO Domain expired"
            * "FIO Address not registered"
            * "Invalid fee value"
            * "Insufficient funds to cover fee"
            * "Fee exceeds supplied maximum"
            * "Already registered as proxy"
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: fio_address
                  value: purse@alice
                  error: 'Already registered as proxy. '
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
        '403':
          description: |-
            Possible triggers:
            * Signer's FIO Public Key does not match actor
            * FIO Address not owned by FIO Public Key in signature
          schema:
            type: object
            properties: {}
            description: >-
              HTTP code 403 is returned when the request signature is not valid
              or this user is not allowed to sign this transaction.
            title: Error 403
          examples:
            application/json:
              type: invalid_signature
              message: Request signature not valid or not allowed.
      summary: 'Register a FIO Address as proxy'
      description: >-
        ## This is not an actual api endpoint

        This section defines the object which needs to be created before it's
        packed and signed and the response object returned in
        processed->action_traces->receipt->response string. See Signed call
        section for the definition of the actual request and response.

        ### "actions" parameters

        * account: `eosio`

        * name: `regproxy`
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              fio_address:
                type: string
                title: FIO Address
                minLength: 3
                maxLength: 64
                pattern: >-
                  ^(?:(?=.{3,64}$)[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))@[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))$)
              actor:
                type: string
                title: Actor
                description: 'See [Generating actor](/actor)'
              max_fee:
                type: integer
                title: Max fee
                description: >-
                  Maximum amount of SUFs the user is willing to pay for fee.
                  Should be preceded by /get_fee for correct value.
            example:
              fio_address: proxy@bob
              actor: aftyershcu22
              max_fee: 10000000
          description: >-
            This section defines the `data` object which needs to be created before
            it's packed and signed.
      operationId: register_proxy_model
      tags:
        - Actions
  unregproxy:
    options:
      responses:
        '200':
          description: >-
            This section defines only the contents of the response returned in
            `processed->action_traces->receipt->response` string. See [push_transaction](#post-/push_transaction)
            section for the definition of the actual response.
          schema:
            type: object
            properties:
              status:
                type: string
                description: OK
              fee_collected:
                title: Fee collected
                description: Amount of SUFs collected as fee
                type: integer
          examples:
            application/json:
              status: OK
              fee_collected: 10000000
        '400':
          description: |-
            Possible error messgaes:
            * "Invalid FIO Address format"
            * "FIO Address expired"
            * "FIO Domain expired"
            * "FIO Address not registered"
            * "Invalid fee value"
            * "Insufficient funds to cover fee"
            * "Fee exceeds supplied maximum"
            * "Not registered as proxy"
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: max_fee
                  value: '200'
                  error: Fee exceeds supplied maximum.
        '403':
          description: |-
            Possible triggers:
            * Signer's FIO Public Key does not match actor
            * FIO Address not owned by FIO Public Key in signature
          schema:
            type: object
            properties: {}
            description: >-
              HTTP code 403 is returned when the request signature is not valid
              or this user is not allowed to sign this transaction.
            title: Error 403
          examples:
            application/json:
              type: invalid_signature
              message: Request signature not valid or not allowed.
      summary: 'Unregisters a FIO Address as proxy'
      description: >-
        This section defines the object which needs to be created before it's
        packed and signed for [push_transaction](#post-/push_transaction) and the response object returned in
        `processed->action_traces->receipt->response` string.

        ### `actions` parameters

        * account: `eosio`

        * name: `unregproxy`
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              fio_address:
                type: string
                title: FIO Address
                minLength: 3
                maxLength: 64
                pattern: >-
                  ^(?:(?=.{3,64}$)[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))@[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))$)
              actor:
                type: integer
                title: Max fee
                description: >-
                  Maximum amount of SUFs the user is willing to pay for fee.
                  Should be preceded by /get_fee for correct value.
              max_fee:
                type: integer
                title: Max fee
                description: >-
                  Maximum amount of SUFs the user is willing to pay for fee.
                  Should be preceded by /get_fee for correct value.
            required:
              - fio_address
              - actor
              - max_fee
            example:
              fio_address: proxy@bob
              actor: aftyershcu22
              max_fee: 10000000
          description: >-
            This section defines the `data` object which needs to be created before
            it's packed and signed.
      operationId: unregister_proxy_model
      tags:
        - Actions
  voteproxy:
    options:
      responses:
        '200':
          description: >-
            This section defines only the contents of the response returned in
            `processed->action_traces->receipt->response` string. See [push_transaction](#post-/push_transaction)
            section for the definition of the actual response.
          schema:
            type: object
            properties:
              status:
                type: string
                description: OK
              fee_collected:
                title: Fee collected
                description: Amount of SUFs collected as fee
                type: integer
          examples:
            application/json:
              status: OK
              fee_collected: 10000000
        '400':
          description: |-
            Possible error messgaes:
            * "Invalid FIO Address format"
            * "FIO Address expired"
            * "FIO Domain expired"
            * "FIO Address not registered"
            * "Invalid fee value"
            * "Insufficient funds to cover fee"
            * "Fee exceeds supplied maximum"
            * "This address is not a proxy"
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: fio_address
                  value: pawel379538@woohoo719202
                  error: This address is not a proxy
        '403':
          description: |-
            Possible triggers:
            * Signer's FIO Public Key does not match actor
          schema:
            type: object
            properties: {}
            description: >-
              HTTP code 403 is returned when the request signature is not valid
              or this user is not allowed to sign this transaction.
            title: Error 403
          examples:
            application/json:
              type: invalid_signature
              message: Request signature not valid or not allowed.
      summary: 'Proxy votes'
      description: >-
        This section defines the object which needs to be created before it's
        packed and signed for [push_transaction](#post-/push_transaction) and the response object returned in
        `processed->action_traces->receipt->response` string.

        ### `actions` parameters

        * account: `eosio`

        * name: `voteproxy`
      operationId: proxy_vote_model
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - proxy
              - fio_address
              - actor
              - max_fee
            properties:
              proxy:
                type: string
                title: FIO Address
                minLength: 3
                maxLength: 64
                pattern: >-
                  ^(?:(?=.{3,64}$)[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))@[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))$)
              fio_address:
                type: string
                title: FIO Address
                minLength: 3
                maxLength: 64
                pattern: >-
                  ^(?:(?=.{3,64}$)[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))@[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))$)
              actor:
                type: string
                title: Actor
                description: 'See [Generating actor](/actor)'
              max_fee:
                type: integer
                title: Max fee
                description: >-
                  Maximum amount of SUFs the user is willing to pay for fee.
                  Should be preceded by /get_fee for correct value.
            example:
              proxy: producer@bob
              fio_address: purse@alice
              actor: aftyershcu22
              max_fee: 10000000
          description: >-
            This section defines the `data` object which needs to be created before
            it's packed and signed.

      tags:
        - Actions
  setfeevote:
    options:
      responses:
        '200':
          description: >-
            This section defines only the contents of the response returned in
            `processed->action_traces->receipt->response` string. See [push_transaction](#post-/push_transaction)
            section for the definition of the actual response.
          schema:
            type: object
            properties:
              status:
                type: string
                description: OK
          examples:
            application/json:
              status: OK
        '400':
          description: |-
            Possible error messages:
            * "Not an active BP"
            * "Value cannot be negative"
            * "Invalid end_point"
            * "Too soon since last call"
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: value
                  value: '-2'
                  error: Value cannot be negative
        '403':
          description: |-
            Possible triggers:
            * Signer's FIO Public Key does not match actor
          schema:
            type: object
            properties: {}
            description: >-
              HTTP code 403 is returned when the request signature is not valid
              or this user is not allowed to sign this transaction.
            title: Error 403
          examples:
            application/json:
              type: invalid_signature
              message: Request signature not valid or not allowed.
      summary: 'Set fee ratios'
      description: >-
        This section defines the object which needs to be created before it's
        packed and signed for [push_transaction](#post-/push_transaction) and the response object returned in
        `processed->action_traces->receipt->response` string.

        ### `actions` parameters

        * account: `fio.fee`

        * name: `setfeevote`
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              fee_ratios:
                type: array
                description: Array of fees and corresponding ratios.
                items:
                  type: object
                  properties:
                    end_point:
                      type: string
                      description: Name of endpoint for which fee is being set.
                    value:
                      type: integer
                      description: Fee in SUFs which will be multiplied by multiplier.
              actor:
                type: string
                title: Actor
                description: 'See [Generating actor](/actor)'
            example:
              fee_ratios:
                - end_point: register_fio_domain
                  value: 40000000000
                - end_point: register_fio_address
                  value: 2000000000
                - end_point: renew_fio_domain
                  value: 40000000000
                - end_point: renew_fio_address
                  value: 2000000000
                - end_point: add_pub_address
                  value: 30000000
                - end_point: transfer_tokens_pub_key
                  value: 100000000
                - end_point: new_funds_request
                  value: 60000000
                - end_point: reject_funds_request
                  value: 30000000
                - end_point: record_obt_data
                  value: 60000000
                - end_point: set_fio_domain_public
                  value: 30000000
                - end_point: register_producer
                  value: 10000000000
                - end_point: register_proxy
                  value: 1000000000
                - end_point: unregister_proxy
                  value: 20000000
                - end_point: unregister_producer
                  value: 20000000
                - end_point: proxy_vote
                  value: 30000000
                - end_point: vote_producer
                  value: 30000000
                - end_point: auth_delete
                  value: 20000000
                - end_point: auth_link
                  value: 20000000
                - end_point: auth_update
                  value: 50000000
                - end_point: msig_propose
                  value: 50000000
                - end_point: msig_approve
                  value: 20000000
                - end_point: msig_unapprove
                  value: 20000000
                - end_point: msig_cancel
                  value: 20000000
                - end_point: msig_exec
                  value: 20000000
                - end_point: msig_invalidate
                  value: 20000000
              actor: BP_ACTOR
          description: >-
            This section defines the `data` object which needs to be created before
            it's packed and signed.
      operationId: submit_fee_ratios_model
      tags:
        - Actions
  setfeemult:
    options:
      responses:
        '200':
          description: >-
            This section defines only the contents of the response returned in
            `processed->action_traces->receipt->response` string. See [push_transaction](#post-/push_transaction)
            section for the definition of the actual response.
          schema:
            type: object
            properties:
              status:
                type: string
                description: OK
          examples:
            application/json:
              status: OK
        '400':
          description: |-
            Possible error messages:
            * "Not an active BP"
            * "Must be positive"
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: multiplier
                  value: '-2.000000'
                  error: ' Must be positive'
        '403':
          description: |-
            Possible triggers:
            * Signer's FIO Public Key does not match actor
          schema:
            type: object
            properties: {}
            description: >-
              HTTP code 403 is returned when the request signature is not valid
              or this user is not allowed to sign this transaction.
            title: Error 403
          examples:
            application/json:
              type: invalid_signature
              message: Request signature not valid or not allowed.
      summary: 'Set fee multiplier'
      description: >-
        This section defines the object which needs to be created before it's
        packed and signed for [push_transaction](#post-/push_transaction) and the response object returned in
        `processed->action_traces->receipt->response` string.

        ### `actions` parameters

        * account: `fio.fee`

        * name: `setfeemult`
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              multiplier:
                type: integer
                description: Multiplier
              actor:
                type: string
                title: Actor
                description: 'See [Generating actor](/actor)'
            required:
              - multiplier
              - actor
            example:
              multiplier: 100
              actor: aftyershcu22
          description: >-
            This section defines the `data` object which needs to be created before
            it's packed and signed.
      operationId: submit_fee_multiplier_model
      tags:
        - Actions
  bundlevote:
    options:
      responses:
        '200':
          description: >-
            This section defines only the contents of the response returned in
            `processed->action_traces->receipt->response` string. See [push_transaction](#post-/push_transaction)
            section for the definition of the actual response.
          schema:
            type: object
            properties:
              status:
                type: string
                description: OK
          examples:
            application/json:
              status: OK
        '400':
          description: |-
            Possible error messages:
            * "Not an active BP"
            * "Must be positive int"
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    error:
                      type: string
            description: >-
              HTTP code 400 is returned when request was malformed or contained
              improper values. The response body will indicate the name of the
              incorrect field, its type, and the value the service received.
            title: Error 400
          examples:
            application/json:
              type: invalid_input
              message: >-
                An invalid request was sent in, please check the nested errors
                for details.
              fields:
                - name: actor
                  value: gev2yeim1cjy
                  error: ' Not an active BP'
        '403':
          description: |-
            Possible triggers:
            * Signer's FIO Public Key does not match actor
          schema:
            type: object
            properties: {}
            description: >-
              HTTP code 403 is returned when the request signature is not valid
              or this user is not allowed to sign this transaction.
            title: Error 403
          examples:
            application/json:
              type: invalid_signature
              message: Request signature not valid or not allowed.
      summary: 'Set bundled transaction count'
      description: >-
        This section defines the object which needs to be created before it's
        packed and signed for [push_transaction](#post-/push_transaction) and the response object returned in
        `processed->action_traces->receipt->response` string.

        ### `actions` parameters

        * account: `fio.fee`

        * name: `bundlevote`
      operationId: submit_bundled_transaction_model
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              bundled_transactions:
                type: integer
                description: >-
                  Number of bundled transactions which should be included with
                  every FIO Address.
              actor:
                type: string
                title: Actor
                description: 'See [Generating actor](/actor)'
            required:
              - bundled_transactions
              - actor
            example:
              bundled_transactions: 100
              actor: aftyershcu22
          description: >-
            This section defines the `data` object which needs to be created before
            it's packed and signed.
      tags:
        - Actions
  /push_transaction:
    post:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              transaction_id:
                type: string
              processed:
                type: object
                properties:
                  id:
                    type: string
                  block_num:
                    type: integer
                  block_time:
                    type: string
                  producer_block_id:
                    type: string
                  receipt:
                    type: object
                    properties:
                      status:
                        type: string
                      cpu_usage_us:
                        type: integer
                      net_usage_words:
                        type: integer
                  elapsed:
                    type: integer
                  net_usage:
                    type: integer
                  scheduled:
                    type: boolean
                  action_traces:
                    type: array
                    items:
                      type: object
                      properties:
                        receipt:
                          type: object
                          properties:
                            receiver:
                              type: string
                            response:
                              type: string
                            act_digest:
                              type: string
                            global_sequence:
                              type: integer
                            recv_sequence:
                              type: integer
                            auth_sequence:
                              type: array
                              items:
                                type: integer
                            code_sequence:
                              type: integer
                            abi_sequence:
                              type: integer
                        act:
                          type: object
                          properties:
                            account:
                              type: string
                            name:
                              type: string
                            authorization:
                              type: array
                              items:
                                type: object
                                properties:
                                  actor:
                                    type: string
                                  permission:
                                    type: string
                            data:
                              type: object
                              properties:
                                fio_domain:
                                  type: string
                                owner_fio_public_key:
                                  type: string
                                max_fee:
                                  type: integer
                                actor:
                                  type: string
                                tpid:
                                  type: string
                            hex_data:
                              type: string
                        context_free:
                          type: boolean
                        elapsed:
                          type: integer
                        console:
                          type: string
                        trx_id:
                          type: string
                        block_num:
                          type: integer
                        block_time:
                          type: string
                        producer_block_id:
                          type: string
                        account_ram_deltas:
                          type: array
                          items:
                            type: object
                            properties:
                              account:
                                type: string
                              delta:
                                type: integer
                        inline_traces:
                          type: array
                          items:
                            type: object
                            properties:
                              receipt:
                                type: object
                                properties:
                                  receiver:
                                    type: string
                                  response:
                                    type: string
                                  act_digest:
                                    type: string
                                  global_sequence:
                                    type: integer
                                  recv_sequence:
                                    type: integer
                                  auth_sequence:
                                    type: array
                                    items:
                                      type: integer
                                  code_sequence:
                                    type: integer
                                  abi_sequence:
                                    type: integer
                              act:
                                type: object
                                properties:
                                  account:
                                    type: string
                                  name:
                                    type: string
                                  authorization:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        actor:
                                          type: string
                                        permission:
                                          type: string
                                  data:
                                    type:
                                      - object
                                      - string
                                    properties:
                                      from:
                                        type: string
                                      to:
                                        type: string
                                      quantity:
                                        type: string
                                      memo:
                                        type: string
                                  hex_data:
                                    type: string
                              context_free:
                                type: boolean
                              elapsed:
                                type: integer
                              console:
                                type: string
                              trx_id:
                                type: string
                              block_num:
                                type: integer
                              block_time:
                                type: string
                              producer_block_id:
                                type: string
                              account_ram_deltas:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    account:
                                      type: string
                                    delta:
                                      type: integer
                              inline_traces:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    receipt:
                                      type: object
                                      properties:
                                        receiver:
                                          type: string
                                        response:
                                          type: string
                                        act_digest:
                                          type: string
                                        global_sequence:
                                          type: integer
                                        recv_sequence:
                                          type: integer
                                        auth_sequence:
                                          type: array
                                          items:
                                            type: integer
                                        code_sequence:
                                          type: integer
                                        abi_sequence:
                                          type: integer
                                    act:
                                      type: object
                                      properties:
                                        account:
                                          type: string
                                        name:
                                          type: string
                                        authorization:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              actor:
                                                type: string
                                              permission:
                                                type: string
                                        data:
                                          type: object
                                          properties:
                                            from:
                                              type: string
                                            to:
                                              type: string
                                            quantity:
                                              type: string
                                            memo:
                                              type: string
                                        hex_data:
                                          type: string
                                    context_free:
                                      type: boolean
                                    elapsed:
                                      type: integer
                                    console:
                                      type: string
                                    trx_id:
                                      type: string
                                    block_num:
                                      type: integer
                                    block_time:
                                      type: string
                                    producer_block_id:
                                      type: string
                                    account_ram_deltas:
                                      type: array
                                      items:
                                        type: object
                                    inline_traces:
                                      type: array
                                      items:
                                        type: object
          examples:
            application/json:
              transaction_id: 84409d5141043921be9384cd62ddff80d6e9435273cd5c95f96b6ba19c2137cd
              processed:
                id: >-
                  84409d5141043921be9384cd62ddff80d6e9435273cd5c95f96b6ba19c2137cd
                block_num: 1201721
                block_time: '2019-09-27T15:28:56.000'
                producer_block_id: null
                receipt:
                  status: executed
                  cpu_usage_us: 2403
                  net_usage_words: 17
                elapsed: 2403
                net_usage: 136
                scheduled: false
                action_traces:
                  - receipt:
                      receiver: fio.address
                      response: >-
                        {"expiration":"2020-09-26T15:28:56","fee_collected":5000000000,"status":"OK"}
                      act_digest: >-
                        51b6825f1b8c639a3071c0267d29d6ff40b11a9cbcd094885dcd69da92d2a6a1
                      global_sequence: 1212122
                      recv_sequence: 42
                      auth_sequence:
                        - - gev2yeim1cjy
                          - 75
                      code_sequence: 1
                      abi_sequence: 1
                    act:
                      account: fio.address
                      name: regaddress
                      authorization:
                        - actor: gev2yeim1cjy
                          permission: active
                      data:
                        fio_address: pawel554427@woohoo56311
                        owner_fio_public_key: ''
                        max_fee: 5000000000
                        actor: gev2yeim1cjy
                        tpid: ''
                      hex_data: >-
                        17706177656c3535343432373a776f6f686f6f35363331310000f2052a01000000e01f0ad2292fb66200
                    context_free: false
                    elapsed: 1913
                    console: >
                      OWNER:gev2yeim1cjy...Value:7112924518142320608...Key:FIO8PRe4WRZJj5mkem6qVGKyvNFgPsNnjNN6kPhh6EaCpzCVin5Jj...hash:18446744073642438656

                      1601134136 INSIDE.   2020   TESTINSIDE.   5000000000

                      fionamefound:

                      Cannot register TPID or FIO Address not found. The
                      transaction will continue without TPID payment.
                    trx_id: >-
                      84409d5141043921be9384cd62ddff80d6e9435273cd5c95f96b6ba19c2137cd
                    block_num: 1201721
                    block_time: '2019-09-27T15:28:56.000'
                    producer_block_id: null
                    account_ram_deltas:
                      - account: fio.address
                        delta: 646
                    except: null
                    inline_traces:
                      - receipt:
                          receiver: fio.token
                          response: ''
                          act_digest: >-
                            41051fa782f88f79085466aa9f1aff1f918a69b8a3a82a0554060aaf1e8ea5d2
                          global_sequence: 1212123
                          recv_sequence: 84
                          auth_sequence:
                            - - gev2yeim1cjy
                              - 76
                          code_sequence: 1
                          abi_sequence: 1
                        act:
                          account: fio.token
                          name: transfer
                          authorization:
                            - actor: gev2yeim1cjy
                              permission: active
                          data:
                            from: gev2yeim1cjy
                            to: fio.treasury
                            quantity: 5.000000000 FIO
                            memo: FIO API fees. Thank you.
                          hex_data: >-
                            e01f0ad2292fb662e0afc646dd0ca85b00f2052a010000000946494f000000001846494f2041504920666565732e205468616e6b20796f752e
                        context_free: false
                        elapsed: 129
                        console: ''
                        trx_id: >-
                          84409d5141043921be9384cd62ddff80d6e9435273cd5c95f96b6ba19c2137cd
                        block_num: 1201721
                        block_time: '2019-09-27T15:28:56.000'
                        producer_block_id: null
                        account_ram_deltas: []
                        except: null
                        inline_traces:
                          - receipt:
                              receiver: gev2yeim1cjy
                              response: ''
                              act_digest: >-
                                41051fa782f88f79085466aa9f1aff1f918a69b8a3a82a0554060aaf1e8ea5d2
                              global_sequence: 1212124
                              recv_sequence: 19
                              auth_sequence:
                                - - gev2yeim1cjy
                                  - 77
                              code_sequence: 1
                              abi_sequence: 1
                            act:
                              account: fio.token
                              name: transfer
                              authorization:
                                - actor: gev2yeim1cjy
                                  permission: active
                              data:
                                from: gev2yeim1cjy
                                to: fio.treasury
                                quantity: 5.000000000 FIO
                                memo: FIO API fees. Thank you.
                              hex_data: >-
                                e01f0ad2292fb662e0afc646dd0ca85b00f2052a010000000946494f000000001846494f2041504920666565732e205468616e6b20796f752e
                            context_free: false
                            elapsed: 3
                            console: ''
                            trx_id: >-
                              84409d5141043921be9384cd62ddff80d6e9435273cd5c95f96b6ba19c2137cd
                            block_num: 1201721
                            block_time: '2019-09-27T15:28:56.000'
                            producer_block_id: null
                            account_ram_deltas: []
                            except: null
                            inline_traces: []
                          - receipt:
                              receiver: fio.treasury
                              response: ''
                              act_digest: >-
                                41051fa782f88f79085466aa9f1aff1f918a69b8a3a82a0554060aaf1e8ea5d2
                              global_sequence: 1212125
                              recv_sequence: 113
                              auth_sequence:
                                - - gev2yeim1cjy
                                  - 78
                              code_sequence: 1
                              abi_sequence: 1
                            act:
                              account: fio.token
                              name: transfer
                              authorization:
                                - actor: gev2yeim1cjy
                                  permission: active
                              data:
                                from: gev2yeim1cjy
                                to: fio.treasury
                                quantity: 5.000000000 FIO
                                memo: FIO API fees. Thank you.
                              hex_data: >-
                                e01f0ad2292fb662e0afc646dd0ca85b00f2052a010000000946494f000000001846494f2041504920666565732e205468616e6b20796f752e
                            context_free: false
                            elapsed: 11
                            console: ''
                            trx_id: >-
                              84409d5141043921be9384cd62ddff80d6e9435273cd5c95f96b6ba19c2137cd
                            block_num: 1201721
                            block_time: '2019-09-27T15:28:56.000'
                            producer_block_id: null
                            account_ram_deltas: []
                            except: null
                            inline_traces: []
                      - receipt:
                          receiver: fio.treasury
                          response: ''
                          act_digest: >-
                            1a7775344923ca0ff6340e6c0ae2d246ef2899f908a550741d0cfe02d4ce2c0d
                          global_sequence: 1212126
                          recv_sequence: 114
                          auth_sequence:
                            - - fio.system
                              - 51
                          code_sequence: 1
                          abi_sequence: 1
                        act:
                          account: fio.treasury
                          name: fdtnrwdupdat
                          authorization:
                            - actor: fio.system
                              permission: active
                          data: 00e1f50500000000
                        context_free: false
                        elapsed: 51
                        console: ''
                        trx_id: >-
                          84409d5141043921be9384cd62ddff80d6e9435273cd5c95f96b6ba19c2137cd
                        block_num: 1201721
                        block_time: '2019-09-27T15:28:56.000'
                        producer_block_id: null
                        account_ram_deltas:
                          - account: fio.treasury
                            delta: 0
                        except: null
                        inline_traces: []
                      - receipt:
                          receiver: fio.treasury
                          response: ''
                          act_digest: >-
                            f549782fb7ac5903d111ca2e52dd25599b4220ff6958431da5c493cdc97cefca
                          global_sequence: 1212127
                          recv_sequence: 115
                          auth_sequence:
                            - - fio.system
                              - 52
                          code_sequence: 1
                          abi_sequence: 1
                        act:
                          account: fio.treasury
                          name: bppoolupdate
                          authorization:
                            - actor: fio.system
                              permission: active
                          data: '0011102401000000'
                        context_free: false
                        elapsed: 34
                        console: ''
                        trx_id: >-
                          84409d5141043921be9384cd62ddff80d6e9435273cd5c95f96b6ba19c2137cd
                        block_num: 1201721
                        block_time: '2019-09-27T15:28:56.000'
                        producer_block_id: null
                        account_ram_deltas:
                          - account: fio.treasury
                            delta: 0
                        except: null
                        inline_traces: []
                except: null
      description: >-
        Allows advance user to send their own content directly to FIO contracts.


        This request needs to be packed and signed.

        ```
          {
            expiration: string,
            ref_block_num: number,
            ref_block_prefix: number,
            actions:
              {
                account: string
                name: string
                authorization: { actor: string, permission: string }[]
                data: any
              }[]
          }
        ```

        For every ACTION that described below, the `Request` object should be set to `data` in `actions` array,
        also `account` and `name` are provided for each action.
      summary: Push transaction
      operationId: push_transaction
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              signatures:
                type: array
                items:
                  type: string
              compression:
                type: string
              packed_context_free_data:
                type: string
              packed_trx:
                type: string
            title: Signed transaction request
      tags:
        - Transactions
basePath: /v1/chain/
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
definitions:
  error-400:
    type: object
    description: >-
      HTTP code 400 is returned when request was malformed or contained improper
      values. The response body will indicate the name of the incorrect field,
      its type, and the value the service received.
    title: Error 400
    required:
      - type
      - message
      - fields
    properties:
      type:
        type: string
        default: invalid_input
        description: invalid_input
      message:
        type: string
        default: >-
          An invalid request was sent in, please check the nested errors for
          details.
        description: >-
          An invalid request was sent in, please check the nested errors for
          details.
      fields:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              description: Name of the field which triggered the error
            value:
              type: string
              description: Value which was sent in and which triggered the error
            error:
              type: string
              description: Error message
  tpid:
    type: string
    title: TPID
    description: 'See [Technology Provider ID](/fio-protocol/tpid)'
  actor:
    type: string
    title: Actor
    description: 'See [Generating actor](/api/actor)'
  fio-address:
    type: string
    title: FIO Address
    minLength: 3
    maxLength: 64
    pattern: >-
      ^(?:(?=.{3,64}$)[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))@[a-zA-Z0-9]{1}(?:(?!-{2,}))[a-zA-Z0-9-]*(?:(?<!-))$)
  date-time:
    type: string
    format: date-time
    title: Date/time
  fee-collected:
    title: Fee collected
    description: Amount of SUFs collected as fee
    type: integer
  error-403:
    type: object
    description: >-
      HTTP code 403 is returned when the action is forbidden.


      |type|message|description|

      |---|---|---|

      |invalid_signature|Request signature not valid or not allowed.|Request
      signature is not valid or this user is not allowed to sign this
      transaction. For example, this error will be returned if a user tries to
      add_pub_address on a FIO Address they do not own.|

      |invalid_transaction|Signed transactions is not valid or is not formatted
      properly.|Transaction is not properly signed or formatted.|

      |invalid_account_or_action|Provided account or action is not valid for
      this endpoint.|Returned when an attempt is made to pass actions which are
      not associated with a specific endpoint or account.|
    title: Error 403
    properties:
      type:
        type: string
        description: Type of 403 error
        example: invalid_signature
      message:
        type: string
        example: Request signature not valid or not allowed.
        description: Message associated with the 403 type
    required:
      - type
      - message
  error-404:
    type: object
    title: Error 404
    description: >-
      HTTP code 404 is returned when the requested information could not be
      found.
    properties:
      message:
        type: string
        description: Call specific error message.
        example: Public address not found
  fio-domain:
    type: string
    title: FIO Domain
    minLength: 1
    maxLength: 62
    pattern: '^[a-z0-9-]+$'
  signed-request:
    type: object
    properties:
      signatures:
        type: array
        items:
          type: string
      compression:
        type: string
      packed_context_free_data:
        type: string
      packed_trx:
        type: string
    title: Signed transaction request
  signed-response:
    type: object
    properties:
      transaction_id:
        type: string
      processed:
        type: object
        properties:
          id:
            type: string
          block_num:
            type: integer
          block_time:
            type: string
          producer_block_id:
            type: 'null'
          receipt:
            type: object
            properties:
              status:
                type: string
              cpu_usage_us:
                type: integer
              net_usage_words:
                type: integer
          elapsed:
            type: integer
          net_usage:
            type: integer
          scheduled:
            type: boolean
          action_traces:
            type: array
            items:
              type: object
              properties:
                receipt:
                  type: object
                  properties:
                    receiver:
                      type: string
                    response:
                      type: string
                    act_digest:
                      type: string
                    global_sequence:
                      type: integer
                    recv_sequence:
                      type: integer
                    auth_sequence:
                      type: array
                      items:
                        type: integer
                    code_sequence:
                      type: integer
                    abi_sequence:
                      type: integer
                act:
                  type: object
                  properties:
                    account:
                      type: string
                    name:
                      type: string
                    authorization:
                      type: array
                      items:
                        type: object
                        properties:
                          actor:
                            type: string
                          permission:
                            type: string
                    data:
                      type: object
                      properties:
                        fio_domain:
                          type: string
                        owner_fio_public_key:
                          type: string
                        max_fee:
                          type: integer
                        actor:
                          type: string
                        tpid:
                          type: string
                    hex_data:
                      type: string
                context_free:
                  type: boolean
                elapsed:
                  type: integer
                console:
                  type: string
                trx_id:
                  type: string
                block_num:
                  type: integer
                block_time:
                  type: string
                producer_block_id:
                  type: 'null'
                account_ram_deltas:
                  type: array
                  items:
                    type: object
                    properties:
                      account:
                        type: string
                      delta:
                        type: integer
                except:
                  type: 'null'
                inline_traces:
                  type: array
                  items:
                    type: object
                    properties:
                      receipt:
                        type: object
                        properties:
                          receiver:
                            type: string
                          response:
                            type: string
                          act_digest:
                            type: string
                          global_sequence:
                            type: integer
                          recv_sequence:
                            type: integer
                          auth_sequence:
                            type: array
                            items:
                              type: integer
                          code_sequence:
                            type: integer
                          abi_sequence:
                            type: integer
                      act:
                        type: object
                        properties:
                          account:
                            type: string
                          name:
                            type: string
                          authorization:
                            type: array
                            items:
                              type: object
                              properties:
                                actor:
                                  type: string
                                permission:
                                  type: string
                          data:
                            type:
                              - object
                              - string
                            properties:
                              from:
                                type: string
                              to:
                                type: string
                              quantity:
                                type: string
                              memo:
                                type: string
                          hex_data:
                            type: string
                      context_free:
                        type: boolean
                      elapsed:
                        type: integer
                      console:
                        type: string
                      trx_id:
                        type: string
                      block_num:
                        type: integer
                      block_time:
                        type: string
                      producer_block_id:
                        type: 'null'
                      account_ram_deltas:
                        type: array
                        items:
                          type: object
                          properties:
                            account:
                              type: string
                            delta:
                              type: integer
                      except:
                        type: 'null'
                      inline_traces:
                        type: array
                        items:
                          type: object
                          properties:
                            receipt:
                              type: object
                              properties:
                                receiver:
                                  type: string
                                response:
                                  type: string
                                act_digest:
                                  type: string
                                global_sequence:
                                  type: integer
                                recv_sequence:
                                  type: integer
                                auth_sequence:
                                  type: array
                                  items:
                                    type: integer
                                code_sequence:
                                  type: integer
                                abi_sequence:
                                  type: integer
                            act:
                              type: object
                              properties:
                                account:
                                  type: string
                                name:
                                  type: string
                                authorization:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      actor:
                                        type: string
                                      permission:
                                        type: string
                                data:
                                  type: object
                                  properties:
                                    from:
                                      type: string
                                    to:
                                      type: string
                                    quantity:
                                      type: string
                                    memo:
                                      type: string
                                hex_data:
                                  type: string
                            context_free:
                              type: boolean
                            elapsed:
                              type: integer
                            console:
                              type: string
                            trx_id:
                              type: string
                            block_num:
                              type: integer
                            block_time:
                              type: string
                            producer_block_id:
                              type: 'null'
                            account_ram_deltas:
                              type: array
                              items:
                                type: object
                            except:
                              type: 'null'
                            inline_traces:
                              type: array
                              items:
                                type: object
          except:
            type: 'null'
    title: Signed transaction response
  max-fee:
    type: integer
    title: Max fee
    description: >-
      Maximum amount of SUFs the user is willing to pay for fee. Should be
      preceded by /get_fee for correct value.
  token-code:
    type: string
    title: Token/chain code
    minLength: 1
    maxLength: 10
    pattern: '^[A-Z0-9]+$'
    description: >
      Chain code identifies the blockchain, while token code identifies a token
      on that blockchain. For example: for USDC: chain_code = ETH and token_code
      = USDC, for BTC: chain_code = BTC and token_code = BTC. For list of chain
      codes you can refer to
      [SLIP-44](https://github.com/satoshilabs/slips/blob/master/slip-0044.md)
      and for list of token code refer to the specific blockchain.
  fio-request-ecrypted-content:
    type: object
    title: FIO Request encrypted content
    description: >-
      Certain content inside FIO Request is encrypted and packed into this
      field.


      Min 64 characters

      Max 296 characters


      See [Encrypting FIO Data](/wallet-integration-guide/encrypting-fio-data)
      for more information.
    properties:
      payee_public_address:
        type: object
        properties: {}
        title: Native Blockchain Public Address
        description: "This is the public address on another blockchain. Both integrated addresses as well as URI Scheme are supported.\n\n**Integrated Address**\nIf the blockchain supports it, an integrated address may be passed in just like standard public address. The FIO protocol does not perform validation on the passed string.\n\n**URI Scheme**\nFIO Protocol will support formatting of public addresses using URI were certain attributes are appended to the public address following a '?' and delimited with '&'. To allow inter-wallet operability, the following standardized parameters will be supported in official FIO Protocol SDKs.\n\n**Parameters**\n* dt - Ripple\n* memo - Any - use as generic memo field\n* memo_id -\tStellar\n* memo_text -\tStellar\n* memo_hash -\tStellar\n* memo_return -\tStellar\n* payment_id - Monero\n"
      amount:
        type: string
        description: Amount requested.
      token_code:
        type: string
        title: Token/chain code
        minLength: 1
        maxLength: 10
        pattern: '^[A-Z0-9]+$'
      memo:
        type: string
      hash:
        type: string
      offline_url:
        type: string
      future_use1:
        type: string
      future_use2:
        type: string
      future_use3:
        type: string
      future_use4:
        type: string
      future_use5:
        type: string
    required:
      - payee_public_address
      - amount
      - token_code
      - memo
      - hash
      - offline_url
      - future_use1
      - future_use2
      - future_use3
      - future_use4
      - future_use5
  fio_request-status:
    type: string
    title: FIO Request status
    enum:
      - requested
      - request_rejected
      - sent_to_blockchain
    description: Status of FIO Request
  fio-data-encrypted-content:
    type: object
    title: FIO Data encrypted content
    description: >-
      Certain content inside FIO Data is encrypted and packed into this field.


      Min 64 characters

      Max 432 characters


      See [Encrypting FIO Data](/wallet-integration-guide/encrypting-fio-data)
      for more information.
    properties:
      payer_public_address:
        type: string
        description: Public address on other blockchain of user sending funds.
      payee_public_address:
        type: string
        description: Public address on other blockchain of user receiving funds.
      amount:
        type: string
        description: Amount sent.
      token_code:
        type: string
        title: Token/chain code
        minLength: 1
        maxLength: 10
        pattern: '^[A-Z0-9]+$'
      status:
        type: string
        description: |-
          Status of this OBT. Allowed statuses are:
          * sent_to_blockchain
      obt_id:
        type: string
        description: 'Other Blockchain Transaction ID (OBT ID), i.e Bitcoin transaction ID'
      memo:
        type: string
        description: memo field
      hash:
        type: string
      offline_url:
        type: string
    required:
      - payer_public_address
      - payee_public_address
      - amount
      - token_code
      - status
      - obt_id
      - memo
      - hash
      - offline_url
  fio-public-key:
    type: string
    title: FIO Public Key
    description: Valid WIF Public Key with FIO Prefix
  nbpa:
    type: object
    properties: {}
    title: Native Blockchain Public Address
    description: "This is the public address on another blockchain. Both integrated addresses as well as URI Scheme are supported.\n\n**Integrated Address**\nIf the blockchain supports it, an integrated address may be passed in just like standard public address. The FIO protocol does not perform validation on the passed string.\n\n**URI Scheme**\nFIO Protocol will support formatting of public addresses using URI were certain attributes are appended to the public address following a '?' and delimited with '&'. To allow inter-wallet operability, the following standardized parameters will be supported in official FIO Protocol SDKs.\n\n**Parameters**\n* dt - Ripple\n* memo - Any - use as generic memo field\n* memo_id -\tStellar\n* memo_text -\tStellar\n* memo_hash -\tStellar\n* memo_return -\tStellar\n* payment_id - Monero\n"
  rawTrx:
    type: object
    properties:
      authorization:
        type: array
        items:
          type: object
          properties:
            actor:
              type: string
            permission:
              type: string
      name:
        type: string
      account:
        type: string
      data:
        type: any
responses: {}
parameters: {}
security: []
tags:
  - name: Getters
    description: Endpoints to get information you need
  - name: Transactions
    description: Creates transaction in the chain
  - name: Actions
    description: List of actions to sign for [push_transaction](#post-/push_transaction)
x-stoplight:
  docs:
    includeDownloadLink: true
